<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CovidMassTesting</name>
    </assembly>
    <members>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.Authenticate(System.String,System.String)">
            <summary>
            Authenticase to eHealth
            </summary>
            <param name="user">username - You can obtain this from the eHealth support</param>
            <param name="pass">password</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.CheckPerson(System.String,System.String)">
            <summary>
            Check person. Returns null if person is not in eHealth
            </summary>
            <param name="token"></param>
            <param name="vSearch_string"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.Extendsession(System.String,CovidMassTesting.Model.EZdravie.Request.ExtendSessionRequest)">
            <summary>
            Extends session validity
            </summary>
            <param name="token"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.DriveInQueue(System.String,System.DateTimeOffset)">
            <summary>
            Get testing place information
            </summary>
            <param name="token"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.PlaceDetail(System.String,System.DateTimeOffset,System.String)">
            <summary>
            List registered users at specified place and date
            </summary>
            <param name="token"></param>
            <param name="date"></param>
            <param name="driveinId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.AddPersonToTestingPlace(System.String,System.Int32,CovidMassTesting.Model.EZdravie.Request.DriveInRequest)">
            <summary>
            Allocate person for testing at the testing place
            </summary>
            <param name="token"></param>
            <param name="cfid"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.SetTestResultToPerson(System.String,CovidMassTesting.Model.EZdravie.Request.SetResultRequest)">
            <summary>
            Set the test result
            </summary>
            <param name="token"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.SendResultToEHealth(CovidMassTesting.Model.Visitor,System.String,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Send visitor registered in rychlejsie or downloaded from eHealth to eHealth system
            
            Returns true if successful, False or Exception if not successful
            </summary>
            <param name="visitor"></param>
            <param name="placeProviderId"></param>
            <param name="placeProviderRepository"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.RegisterPerson(System.String,CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest)">
            <summary>
            Registers person to eHealth
            </summary>
            <param name="token"></param>
            <param name="registerPersonRequest"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.IMojeEZdravie.DownloadEHealthVisitors(System.String,System.String,System.DateTimeOffset,CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.ISlotRepository,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Downloads all visitors from all eHealth user locations to rychlejsie
            
            Returns number of new visitors
            </summary>
            <param name="placeProviderId"></param>
            <param name="managerEmail"></param>
            <param name="day"></param>
            <param name="visitorRepository"></param>
            <param name="placeRepository"></param>
            <param name="slotRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.MojeEZdravieAbstract.DownloadEHealthVisitors(System.String,System.String,System.DateTimeOffset,CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.ISlotRepository,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Downloads the visitors from eHealth
            </summary>
            <param name="placeProviderId"></param>
            <param name="managerEmail"></param>
            <param name="day"></param>
            <param name="visitorRepository"></param>
            <param name="placeRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="slotRepository"></param>
            <param name="loggerFactory"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Connectors.MojeEZdravieAbstract.SendResultToEHealth(CovidMassTesting.Model.Visitor,System.String,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Send visitor registered in rychlejsie or downloaded from eHealth to eHealth system
            
            Returns true if successful, False or Exception if not successful
            </summary>
            <param name="visitor"></param>
            <param name="placeProviderId"></param>
            <param name="placeProviderRepository"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.AdminController">
            <summary>
            Administration methods
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.AdminController},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.AdminController},CovidMassTesting.Repository.Interface.ISlotRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Connectors.IMojeEZdravie,CovidMassTesting.Controllers.Email.IEmailSender,CovidMassTesting.Controllers.SMS.ISMSSender)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="logger"></param>
            <param name="slotRepository"></param>
            <param name="placeRepository"></param>
            <param name="userRepository"></param>
            <param name="visitorRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="mojeEZdravie"></param>
            <param name="emailSender"></param>
            <param name="smsSender"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.CheckSlots(System.String,System.Int32,System.Int32)">
            <summary>
            Shows available days per place
            </summary>
            <param name="testingDay"></param>
            <param name="from">Hour from when testing place is open</param>
            <param name="until">Hour until when testing place is open. 20 means that 20:05 is closed</param>
            <returns>Number of new slots</returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.InviteUser(System.String,System.String,System.String[])">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixStats(System.String,System.Int32,System.String)">
            <summary>
            Fix corrupted stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.DashboardStats">
            <summary>
            DashboardStats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixAdvancedStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Fix advanced stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixAdvancedStatsSlots(System.Nullable{System.DateTimeOffset})">
            <summary>
            fix slots stats
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixSlotsOnly">
            <summary>
            fix slots stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixMoveVisitorsToSummerTime(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Move visitors by one hour
            </summary>
            <param name="regFrom"></param>
            <param name="regUntil"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.ReportSlotIssues">
            <summary>
            Some slots at the time change from winter to summer time does not have description properly filled in regarding the timestamp
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.ReportSlotIssuesM">
            <summary>
            Some slots at the time change from winter to summer time does not have description properly filled in regarding the timestamp
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixSlotIssues(System.Nullable{System.Boolean})">
            <summary>
            Some slots at the time change from winter to summer time does not have description properly filled in regarding the timestamp
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixPersonPlace(System.String,System.String,System.String)">
            <summary>
            Fix corrupted stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.RemoveUser(System.String)">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.SendResultToEHealth(System.String)">
            <summary>
            This method exports all visitors who are in state in processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.SendDayResultsToEHealth(System.DateTimeOffset)">
            <summary>
            This method imports all visitor to eHealth which has not yet been sent to eHealth 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.DownloadEHealthVisitors(System.Nullable{System.DateTimeOffset})">
            <summary>
            This method exports all visitors who are in state in processing
            
            If day is not filled in, use current day
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FindVisitor(System.String)">
            <summary>
            This method exports all visitors who are in state in processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.UpdateVisitor(CovidMassTesting.Model.Visitor)">
            <summary>
            Global admin can fix visitor
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.ResetPassword(System.String)">
            <summary>
            Reset password 
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.SendSMS(System.String)">
            <summary>
            Test sms
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.SendSMSSummerZone(System.String,System.Nullable{System.DateTimeOffset})">
            <summary>
            Test sms
            </summary>
            <param name="test">Test first</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.DropDatabase(System.String)">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixStatsAuto">
            <summary>
            Fix stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixTestingTime">
            <summary>
            Fix stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixVisitorPlace(System.Int32,System.String)">
            <summary>
            Fix stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixVerificationData">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixConnectVisitorsWithEmployeeId">
            <summary>
            FixConnectVisitorsWithEmployeeId
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.DeleteAllRegistrations">
            <summary>
            Global admin method to reset all registrations
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixSendRegistrationSMS">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.FixMapVisitorToDay">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.DeleteOldVisitors(System.Nullable{System.Int32})">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.RequeeUnprocessedVisitors">
            <summary>
            List all result submissions, if visitor is still in not processed state, add the result submission to the queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.GetVisitorCodeFromTestCode(System.String)">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.SendEmail(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Send generic email
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.UploadTests">
            <summary>
            Upload employees - PP Administrator can upload employees
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.IEmailSender">
            <summary>
            Interface for email client
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.IEmailSender.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail,System.Collections.Generic.IEnumerable{SendGrid.Helpers.Mail.Attachment})">
            <summary>
            Send email
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.IEmailSender.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Email without attachment
            </summary>
            <param name="subject"></param>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.MailGunSender">
            <summary>
            Sendgrid email sender
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.MailGunSender.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.Email.MailGunSender},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.MailGunConfiguration})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.MailGunSender.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail,System.Collections.Generic.IEnumerable{SendGrid.Helpers.Mail.Attachment})">
            <summary>
            Semd email
            </summary>
            <param name="subject"></param>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <param name="attachments"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.NoEmailSender">
            <summary>
            If no email sender is defined
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.NoEmailSender.Data">
            <summary>
            For unit tests
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.NoEmailSender.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail,System.Collections.Generic.IEnumerable{SendGrid.Helpers.Mail.Attachment})">
            <summary>
            Act as email was sent. Log event to console
            </summary>
            <param name="subject"></param>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <param name="attachments"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.RabbitMQEmailSender">
            <summary>
            https://doc.gosms.cz/#dokumentace-gosms-api
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.RabbitMQEmailSender.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.Email.RabbitMQEmailSender},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.Email.RabbitMQEmailSender})">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="settings"></param>
            <param name="logger"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.RabbitMQEmailSender.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail,System.Collections.Generic.IEnumerable{SendGrid.Helpers.Mail.Attachment})">
            <summary>
            Rabbit MQ Email sender
            </summary>
            <param name="subject"></param>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <param name="attachments"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendGridController">
            <summary>
            Sendgrid email sender
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.Email.SendGridController},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.SendGridConfiguration})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.SendEmail(System.String,System.String,System.String,CovidMassTesting.Model.Email.IEmail,System.Collections.Generic.IEnumerable{SendGrid.Helpers.Mail.Attachment})">
            <summary>
            Semd email
            </summary>
            <param name="subject"></param>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <param name="attachments"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplate">
            <summary>
            Sendgrid Email templating : https://sendgrid.com/docs/API_Reference/Web_API_v3/Transactional_Templates/templates.html
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplates">
            <summary>
            List of templates
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplates.Templates">
            <summary>
            templates
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.PlaceController">
            <summary>
            Manages places
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.PlaceController},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceController},CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.ISlotRepository)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="localizer"></param>
            <param name="logger"></param>
            <param name="placeRepository"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="slotRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.List">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.ListFiltered(System.String,System.String)">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.PrivateList">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.ScheduleOpenningHours(CovidMassTesting.Model.TimeUpdate[])">
            <summary>
            Set openning hours for branches.
            </summary>
            <param name="actions"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.ListScheduledDays(System.String)">
            <summary>
            Set openning hours for branches.
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.InsertOrUpdate(CovidMassTesting.Model.Place)">
            <summary>
            Admin can insert new testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.SetPlaceLimitation(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Int32)">
            <summary>
            Limit specific place
            </summary>
            <param name="placeId"></param>
            <param name="from"></param>
            <param name="until"></param>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.DeletePlaceLimitation(System.String,System.String)">
            <summary>
            Delete place limitation
            </summary>
            <param name="placeId"></param>
            <param name="limitId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Admin can delete testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.InsertOrUpdatePlaceProduct(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Creates product at specified place with special price valid from until as specified in PlaceProduct object 
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.DeletePlaceProduct(System.String)">
            <summary>
            Admin can delete testing location
            </summary>
            <param name="placeProductid"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.PlaceProviderController">
            <summary>
            Manages place provider companies
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.PlaceProviderController},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceProviderController},CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IVisitorRepository)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="localizer"></param>
            <param name="logger"></param>
            <param name="placeProviderRepository"></param>
            <param name="placeRepository"></param>
            <param name="userRepository"></param>
            <param name="visitorRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.Register(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.UpdatePP(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Updates updatable information about place provider
            </summary>
            <param name="placeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.UpdateSensitiveData(CovidMassTesting.Model.PlaceProviderSensitiveData)">
            <summary>
            Updates encrypted data for place provider
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.GetSensitiveData">
            <summary>
            Updates encrypted data for place provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.InviteUserToPP(System.String,System.String,System.String,System.String)">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="phone"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPublic">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPrivate">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.GetPrice(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Public method to calculate costs
            </summary>
            <param name="currency"></param>
            <param name="country"></param>
            <param name="includeVAT"></param>
            <param name="includeSLA"></param>
            <param name="includeRegistrations"></param>
            <param name="slaFrom"></param>
            <param name="slaUntil"></param>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.OrderRegistrations(System.String,System.Int32,System.String)">
            <summary>
            Administrator or accountant can issue proforma invoice. This is not real invoice but the document to be able to process the payment in the companies where legislation process does not allow prepayments.
            
            We issue real invoices only after the payment is processed.
            </summary>
            <param name="placeProviderId"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.IssueProformaInvoice(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.String)">
            <summary>
            Administrator or accountant can issue proforma invoice. This is not real invoice but the document to be able to process the payment in the companies where legislation process does not allow prepayments.
            
            We issue real invoices only after the payment is processed.
            </summary>
            <param name="placeProviderId"></param>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="slaFrom"></param>
            <param name="slaUntil"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.AllocatePersonsToPlace(CovidMassTesting.Model.PersonAllocation[],System.String)">
            <summary>
            Allocate 
            </summary>
            <param name="allocations"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.RemoveAllocationAtPlace(System.String,System.String)">
            <summary>
            Allocate 
            </summary>
            <param name="allocationId"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPlaceAllocations(System.String)">
            <summary>
            List HR allocations to specific place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.CreateProduct(CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to create product or service which he sells or serve at the testing place
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.UpdateProduct(CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to update product or service which he sells or serve at the testing place
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.DeleteProduct(CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to delete product or service which he sells or serve at the testing place
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListProducts">
            <summary>
            Administrator is allowed to list pp products
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListExternalProducts">
            <summary>
            List extenral products for all authenticated users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.GetStats(System.String,System.String)">
            <summary>
            Administrator is allowed to list pp products
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPlaceProductByPlace(System.String)">
            <summary>
            Everyone can list place products at place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPlaceProductByPlaceProvider(System.String)">
            <summary>
            Everyone can list place products at place provider
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPlaceProduct">
            <summary>
            Everyone can list place products at place provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceProviderController.ListPlaceProductByCategory(System.String)">
            <summary>
            Everyone can list place products at place provider
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.QRController">
            <summary>
            Manages places
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.QRController.GeneratePDF(CovidMassTesting.Model.Settings.PDFQRConfiguration)">
             <summary>
             Generates PDF File
             
             Default variables: https://github.com/scholtz/covid-sk-api/blob/main/CovidMassTesting/Model/Settings/PDFQRConfiguration.cs
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.ResultController">
            <summary>
            This controller manages test results
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.ResultController},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.ResultController},CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,GoogleReCaptcha.V3.Interface.ICaptchaValidator)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="localizer"></param>
            <param name="logger"></param>
            <param name="visitorRepository"></param>
            <param name="userRepository"></param>
            <param name="placeRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="captchaValidator"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitor(System.String)">
            <summary>
            Testing personell can load data by the code, so that they can verify that the code is the specific user
            </summary>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitorByRC(System.String)">
            <summary>
            Testing personell can load data by the personal number, so that they can verify that person legitimity
            </summary>
            <param name="rc">Personal number</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ConnectVisitorToTest(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="visitorCode"></param>
            <param name="testCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.Get(System.String,System.String,System.String)">
            <summary>
            Public method to show test results to user
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.DownloadPDF(System.String,System.String,System.String)">
            <summary>
            Public method to show test results to user .. returns pdf file
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.DownloadWalletDGC(System.String,System.String,System.String)">
            <summary>
            Public method to show test results to user .. returns pdf file
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.PrintCertificateByDocumentManager(System.String,System.String,System.String,System.String)">
            <summary>
            PrintCertificateByDocumentManager
            </summary>
            <param name="registrationCode"></param>
            <param name="personalNumber"></param>
            <param name="testingSet"></param>
            <param name="employeeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ResendResult(System.String,System.String,System.String)">
            <summary>
            Person can resend his results one more time on request
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.RemoveTest(System.String,System.String,System.String)">
            <summary>
            Public method to remove user test from database and all his private information
            
            It is possible to remove this test only when test is marked as negative
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.SetResult(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetNextTest">
            <summary>
            This method is for person who writes certificates on paper
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.RemoveFromDocQueue(System.String)">
            <summary>
            This method removes test from queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitorCodeFromTestCode(System.String)">
            <summary>
            Get VisitorCode From TestCode
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.VerifyResult(System.String)">
            <summary>
            This method removes test from queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.FinalDataExport(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            This method exports data for healthy office
            
            Lists all visitor which were marked as sick. Exports all available data.
            
            returns CSV file as download
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListTestedVisitors(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List visitors tested at specified day
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListAnonymizedVisitors(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List visitors tested at specified day
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ProofOfWorkExport(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            Proof of work.. Export for army or other institution with names of visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListExportableDays">
            <summary>
            ListExportableDays
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListVisitorsInProcess(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            This method exports all visitors who are in state in processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListAllVisitorsWhoDidNotCome(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            This method exports all visitors who did not come for the test
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ListAllVisitors(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            Export all visitors
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.FormatBarCode(System.String)">
            <summary>
            Format the visitor code
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.SlotController">
            <summary>
            Slot controller manages time slots at the sampling places
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.SlotController},CovidMassTesting.Repository.Interface.ISlotRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="slotRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.ListDaySlotsByPlace(System.String,System.String)">
            <summary>
            Shows available days per place
            </summary>
            <param name="placeId"></param>
            <param name="showAll">0|1 If not filled in or 0, it does not show past slots</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.ListHourSlotsByPlaceAndDaySlotId(System.String,System.Int64,System.String)">
            <summary>
            Shows available hours at specific day and place
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <param name="showAll">0|1 If not filled in or 0, it does not show past slots</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.ListMinuteSlotsByPlaceAndHourSlotId(System.String,System.Int64,System.String)">
            <summary>
            List specific minute slots at specific hour and place
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <param name="showAll">0|1 If not filled in or 0, it does not show past slots</param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.SMS.GoSMSQueueSender">
            <summary>
            https://doc.gosms.cz/#dokumentace-gosms-api
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.GoSMSQueueSender.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.SMS.GoSMSQueueSender},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.GoSMSQueueConfiguration},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.SMS.GoSMSQueueSender})">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="settings"></param>
            <param name="logger"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.GoSMSQueueSender.SendSMS(System.String,CovidMassTesting.Model.SMS.ISMS)">
            <summary>
            Act as sms was sent. Log event to console
            </summary>
            <param name="toPhone"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.SMS.GoSMSSender">
            <summary>
            https://doc.gosms.cz/#dokumentace-gosms-api
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.GoSMSSender.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.SMS.GoSMSSender},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.GoSMSConfiguration},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.SMS.GoSMSSender})">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="settings"></param>
            <param name="logger"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.GoSMSSender.SendSMS(System.String,CovidMassTesting.Model.SMS.ISMS)">
            <summary>
            Act as sms was sent. Log event to console
            </summary>
            <param name="toPhone"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.SMS.ISMSSender">
            <summary>
            Interface for email client
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.ISMSSender.SendSMS(System.String,CovidMassTesting.Model.SMS.ISMS)">
            <summary>
            Send email
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.SMS.MockSMSSender">
            <summary>
            If no email sender is defined
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.MockSMSSender.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.SMS.MockSMSSender})">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="P:CovidMassTesting.Controllers.SMS.MockSMSSender.Data">
            <summary>
            For unit tests
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.MockSMSSender.SendSMS(System.String,CovidMassTesting.Model.SMS.ISMS)">
            <summary>
            Act as sms was sent. Log event to console
            </summary>
            <param name="toPhone"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.SMS.RabbitMQSMSSender">
            <summary>
            https://doc.gosms.cz/#dokumentace-gosms-api
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.RabbitMQSMSSender.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.SMS.GoSMSQueueSender},Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.SMS.GoSMSQueueSender})">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="settings"></param>
            <param name="logger"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.SMS.RabbitMQSMSSender.SendSMS(System.String,CovidMassTesting.Model.SMS.ISMS)">
            <summary>
            Act as sms was sent. Log event to console
            </summary>
            <param name="toPhone"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.UserController">
            <summary>
            Controller that manages user requests
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Controllers.UserController},Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceController},CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IPlaceRepository)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="logger"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="visitorRepository"></param>
            <param name="placeRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.List">
            <summary>
            List all public information of all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Me">
            <summary>
            Return information about current user
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ListUserInvites">
            <summary>
            List invitations to place provider for generic users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ProcessInvitation(System.String,System.Boolean)">
            <summary>
            List invitations to place provider for generic users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ListPPInvites">
            <summary>
            List invitations to place provider for generic users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.SetLocation(System.String)">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Preauthenticate(System.String)">
            <summary>
            Preauthenticate. Cohash is important part of hash. This method returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Authenticate(System.String,System.String)">
            <summary>
            Returns JWT token
            
            First preauthenticate request must be executed. It returns
            {CoData : "..", CoHash : ".."}
            
            Hash is:
            
            Password = Real Password
            99 repeat of 
             Password = SHA256(Password + CoHash)
             
            Hash = SHA256(Password + CoData)
            </summary>
            <param name="email">User email address</param>
            <param name="hash">Hash of CoData, CoHash and password</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ChangePassword(System.String,System.String)">
            <summary>
            Set new password
            </summary>
            <param name="oldHash"></param>
            <param name="newHash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.RefreshToken">
            <summary>
            Refresh token after something has been changed.. for example after new place provider registration, or after permission granting
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.SetPlaceProvider(System.String)">
            <summary>
            Set place provider
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.CompanyRegistrationsExport(System.Int32,System.Int32)">
            <summary>
            This method exports company registrations
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.VersionController">
            <summary>
            This controller returns version of the current api
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.VersionController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,CovidMassTesting.Repository.Interface.IVisitorRepository)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="visitorRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.VersionController.Get">
            <summary>
            Returns version of the current api
            
            For development purposes it returns version of assembly, for production purposes it returns string build by pipeline which contains project information, pipeline build version, assembly version, and build date
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.VisitorController">
            <summary>
            This controller manages public registrations
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.VisitorController},CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,Microsoft.Extensions.Configuration.IConfiguration,GoogleReCaptcha.V3.Interface.ICaptchaValidator)">
            <summary>
            constructor
            </summary>
            <param name="logger"></param>
            <param name="visitorRepository"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="placeRepository"></param>
            <param name="configuration"></param>
            <param name="captchaValidator"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.Register(CovidMassTesting.Model.Visitor)">
            <summary>
            Public method for pre registration. Result is returned with Visitor.id which is the main identifier of the visit and should be shown in the bar code
            
            Request size is limitted.
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.RegisterWithCompanyRegistration(System.Int64,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Public method for pre registration of company workers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.RegisterEmployeeByManager(System.String,System.String)">
            <summary>
            Registration manager can register visitor with employee number
            </summary>
            <param name="employeeNumber"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.LoadVisitorByEmployeeNumber(System.String)">
            <summary>
            LoadVisitor information by tester with personal number
            </summary>
            <param name="employeeNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.LoadEmployeeByEmployeeNumber(System.String)">
            <summary>
            Load Employee information by documenter
            </summary>
            <param name="employeeNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.Enqueued(System.String,System.String,System.String)">
            <summary>
            When person comes to the queue he can mark him as in the queue
            
            It can help other people to check the queue time
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <param name="captcha"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.RegisterByManager(CovidMassTesting.Model.Visitor)">
            <summary>
            Registration manager can register visitor
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.RegisterEmployeeByDocumenter(System.String,System.String,System.String,System.DateTimeOffset,System.String,System.String)">
            <summary>
            Register employee by the documenter
            </summary>
            <param name="employeeId"></param>
            <param name="email"></param>
            <param name="phone"></param>
            <param name="time"></param>
            <param name="productId"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.GetPublicKey">
            <summary>
            Returns ECIES public key for private data encryption
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.GetPrivateKey">
            <summary>
            Tester is allowed to fetch the private key for the encrypted QR code with sensitive data to be decrypted
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.UploadEmployees">
            <summary>
            Upload employees - PP Administrator can upload employees
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.Aes">
            <summary>
            https://gist.github.com/magicsih/be06c2f60288b54d9f52856feb96ce8c
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.#ctor">
            <summary>
            Aes256 helper
            
            No params constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.#ctor(System.String,System.String)">
            <summary>
            Aes256 helper
            
            Key &amp; IV constructor .. base64
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Aes256 helper
            
            Key &amp; IV constructor .. byte[]
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Decrypt(System.Byte[])">
            <summary>
            Decrypts message
            </summary>
            <param name="cipher"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.DecryptFromBase64String(System.String)">
            <summary>
            Decrypts from base64
            </summary>
            <param name="base64cipher"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.EncryptToByte(System.String)">
            <summary>
            Encrypts message
            </summary>
            <param name="plain"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.EncryptToBase64String(System.String)">
            <summary>
            Encrypts base64
            </summary>
            <param name="plain"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.GetKey">
            <summary>
            Returns key
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.GetIV">
            <summary>
            returns IV
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.ToString">
            <summary>
            Override to string
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose">
            <summary>
            For IDisposable
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:CovidMassTesting.Helpers.Hash">
            <summary>
            Hash helper
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Hash.GetSHA256Hash(System.Byte[])">
            <summary>
            Allows to make hash of any string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Hash.GetSHA256Hash(System.String)">
            <summary>
            Allows to make hash of any string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.IP">
            <summary>
            IP extensions
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.IP.GetIPAddress(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            ip address
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.OpeningHours">
            <summary>
            OpeningHours extension
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.OpeningHours.ParseOpeningHours(System.String)">
            <summary>
            Parse opening hours
            
            09:00 - 10:00, 10:05 - 20:00
            </summary>
            <param name="openingHours"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.OpeningHours.ValidateOpeningHours(System.String)">
            <summary>
            Validates the opening hours format
            </summary>
            <param name="openingHours"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.OpeningHours.IsTimeWhenIsOpen(System.Collections.Generic.SortedDictionary{System.Int64,System.Boolean},System.TimeSpan)">
            <summary>
            Checks if time is within the range
            </summary>
            <param name="hours"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.OpeningHours.HasAnySlotWithinHourOpen(System.Collections.Generic.SortedDictionary{System.Int64,System.Boolean},System.Int32)">
            <summary>
            Checks if time is within the range
            </summary>
            <param name="hours"></param>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.RandomGenerator">
            <summary>
            Secure random generator
            
            https://stackoverflow.com/questions/42426420/how-to-generate-a-cryptographically-secure-random-integer-within-a-range
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.RandomGenerator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.RandomGenerator.Next(System.Int32,System.Int32)">
            <summary>
            Get random value
            </summary>
            <param name="minValue"></param>
            <param name="maxExclusiveValue"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.RandomGenerator.Dispose">
            <summary>
            Public implementation of Dispose pattern callable by consumers.
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.RandomGenerator.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:CovidMassTesting.Helpers.Text">
            <summary>
            Text helper
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Text.RemoveDiacritism(System.String)">
            <summary>
            https://www.dotnetportal.cz/blogy/4/Tomas-Jecha/663/NET-Tip-6-Ciste-odstraneni-diakritiky
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Text.FormatBarCode(System.String)">
            <summary>
            Formats the code.. removes slashes and trims
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Text.FormatDocument(System.String)">
            <summary>
            Format passport, covid pass and other documents to the standardized form
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.TimeHelper">
            <summary>
            Time helpers 
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.TimeHelper.RoundDay(System.DateTimeOffset)">
            <summary>
            Rounds to day
            
            Round to first hour, then rounds that hour
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.TimeHelper.RoundHour(System.DateTimeOffset)">
            <summary>
            Rounds to hour
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.TimeHelper.RoundMinute(System.DateTimeOffset)">
            <summary>
            Rounds to hour
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.TimeHelper.GetLocalOffset(System.DateTimeOffset)">
            <summary>
            Returns local offset
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.Validators">
            <summary>
            Validator helpers
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Validators.IsValidEmail(System.String)">
            <summary>
            Checks if email is valid
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Validators.FormatPhone(System.String)">
            <summary>
            Format phone to slovak standard
            
            0800 123 456 convers to +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Helpers.Validators.IsValidPhoneNumber(System.String)">
            <summary>
            Validates the phone number +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.AuthData">
            <summary>
            Preauthenticate data to be hashed with password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.AuthData.CoHash">
            <summary>
            Cohash is stable and is set when the password is originally set
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.AuthData.CoData">
            <summary>
            CoData is unique per sign in request. Server generated
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.CompanyIdentifier">
            <summary>
            One person can be employed in multiple companies
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.CompanyIdentifier.CompanyName">
            <summary>
            Company name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.CompanyIdentifier.CompanyId">
            <summary>
            Company identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.CompanyIdentifier.EmployeeId">
            <summary>
            Employee identifier in the company
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.DayTimeManagement">
            <summary>
            For admin overview statistics of opening hours
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.DayTimeManagement.SlotId">
            <summary>
            slot id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.DayTimeManagement.Day">
            <summary>
            day in iso format
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.DayTimeManagement.OpeningHoursTemplates">
            <summary>
            List of used templates
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.DayTimeManagement.OpeningHours">
            <summary>
            List of opening hours in standardized format
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.DayTimeManagement.Count">
            <summary>
            Number of places accounted
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.EmailNameTuple">
            <summary>
            Email with name configuration option
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.EmailNameTuple.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.EmailNameTuple.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.EmailNameTuple.Language">
            <summary>
            Language
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.GenericEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.GenericEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.TextSK">
            <summary>
            Text in Slovak language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.TextCS">
            <summary>
            Text in Czech language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.TextEN">
            <summary>
            Text in English language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.SubjectSK">
            <summary>
            Text in Slovak language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.SubjectCS">
            <summary>
            Text in Czech language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.GenericEmail.SubjectEN">
            <summary>
            Text in English language
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.IEmail">
            <summary>
            Email abstraction class
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.TemplateId">
            <summary>
            Identifier of the template
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.SupportEmail">
            <summary>
            Support email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.SupportPhone">
            <summary>
            Support phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.Website">
            <summary>
            Website
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.IsEN">
            <summary>
            Is English
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.IsSK">
            <summary>
            Is Slovak language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.IsCS">
            <summary>
            Is Czech language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.IsDE">
            <summary>
            Is German language
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.IsHU">
            <summary>
            Is hungarian language
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.IEmail.SetLanguage(System.String)">
            <summary>
            Set the language
            </summary>
            <param name="language"></param>
        </member>
        <member name="T:CovidMassTesting.Model.Email.InvitationEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.InvitationEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.Roles">
            <summary>
            Roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.InviterName">
            <summary>
            Name of person who inveted user
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.CompanyName">
            <summary>
            Company name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.WebPath">
            <summary>
            Company name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.PersonalDataRemovedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.RolesUpdatedEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.RolesUpdatedEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.Roles">
            <summary>
            Roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail">
            <summary>
            Email template for visitor change registration
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.Code">
            <summary>
            Registration code
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.BarCode">
            <summary>
            BarCode image
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.Place">
            <summary>
            Place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorChangeRegistrationEmail.PlaceDescription">
            <summary>
            Place description
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorRegistrationEmail">
            <summary>
            Visitor registration email
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.VisitorRegistrationEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.Code">
            <summary>
            Registration code
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.BarCode">
            <summary>
            BarCode image
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.Place">
            <summary>
            Place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.PlaceDescription">
            <summary>
            Place description
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingResultEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.VisitorTestingResultEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.IsSick">
            <summary>
            Is sick
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="language">Current language</param>
            <param name="url">Web of the system</param>
            <param name="supportEmail">Email Support</param>
            <param name="supportPhone">Phone Support</param>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.EmployeeRegistration">
            <summary>
            Registration obje
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Currency">
            <summary>
            Currency validator
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Currency.EUR">
            <summary>
            shared infrastructure
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Currency.USD">
            <summary>
            bronze infrastructure
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Currency.CZK">
            <summary>
            silver infrastructure
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Currency.ValidateCurrency(System.String)">
            <summary>
            validates sla level
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.Groups">
            <summary>
            List of roles/groups
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.Admin">
            <summary>
            Admin can create users, places, set dates, and all methods with other roles
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.PPAdmin">
            <summary>
            Place provider Admin can create users, places, set dates, and all methods with other roles within scope of the place provider
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.Accountant">
            <summary>
            Accountant is able to list invoices to the hospital or issue new one
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.PasswordProtected">
            <summary>
            User with this role can not change password
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.RegistrationManager">
            <summary>
            User in this role can fetch users by the registration code
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.MedicTester">
            <summary>
            User with this role can assign test bar code to the registed user
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.DocumentManager">
            <summary>
            User with this role can export data of all infected users and pass them to covid center
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.MedicLab">
            <summary>
            User with this role can set testing results
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.DataExporter">
            <summary>
            Person in this group is allowed to list all sick people and export data
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Groups.Helper">
            <summary>
            Person who does not have any rights, but helps with the sampling process
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Groups.ValidateGroupName(System.String)">
            <summary>
            Validates input
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.Enums.SlotType">
            <summary>
            Stats types
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Enums.SlotType.Enum">
            <summary>
            Enum
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Enum.Day">
            <summary>
            Day slot
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Enum.Hour">
            <summary>
            Hour slot
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Enum.Min">
            <summary>
            5 Minute slot
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Enums.SlotType.ToText(CovidMassTesting.Model.Enums.SlotType.Enum)">
            <summary>
            Enum to text
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Day">
            <summary>
            Day slot
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Hour">
            <summary>
            Hour slot
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Enums.SlotType.Min">
            <summary>
            5 min slot
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.StatsType">
            <summary>
            Stats types
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.StatsType.Enum">
            <summary>
            Enum
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.Tested">
            <summary>
            Tested persons
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.EHealthNotification">
            <summary>
            EHealth notifications
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.Notification">
            <summary>
            Notifications
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.Repeat">
            <summary>
            Test repeated
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.Positive">
            <summary>
            Positive cases
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.Negative">
            <summary>
            Negative cases
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.RegisteredTo">
            <summary>
            Registered to date
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Enum.RegisteredOn">
            <summary>
            Registered on date
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.StatsType.ToText(CovidMassTesting.Model.StatsType.Enum)">
            <summary>
            Enum to text
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Tested">
            <summary>
            Number of tested persons
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.EHealthNotification">
            <summary>
            EHealth notifications
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Notification">
            <summary>
            Number of notifications sent
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Repeat">
            <summary>
            Number of test results to be repeated
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Positive">
            <summary>
            Number of positive test results
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.Negative">
            <summary>
            Number of negative test results
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.RegisteredTo">
            <summary>
            Day for which new registrations were registered
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.StatsType.RegisteredOn">
            <summary>
            Day when person was registered
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.TestResult">
            <summary>
            Test results strings
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NotTaken">
            <summary>
            Waiting for visitor to take the test
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.TestIsBeingProcessing">
            <summary>
            Test has been taken by visitor and waiting for test results
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.TestMustBeRepeated">
            <summary>
            Test result is failed test, and must be repeated
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.PositiveWaitingForCertificate">
            <summary>
            Test result is positive. Waiting for visitor to take the certificate
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.PositiveCertificateTaken">
            <summary>
            Test result is positive. Certificate has been given to visitor.
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NegativeWaitingForCertificate">
            <summary>
            Test result is negative. Waiting for visitor to take the certificate
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NegativeCertificateTaken">
            <summary>
            Test result is negative. Certificate has been given to visitor.
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NegativeCertificateTakenTypo">
            <summary>
            Test result is negative. Certificate has been given to visitor.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vFirst_name">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vLast_name">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vBirth_number">
            <summary>
            RC
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vEmail">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vPhone_number">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vMunicipality">
            <summary>
            City
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vStreet">
            <summary>
            Street
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vStreet_number">
            <summary>
            Street no
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vPostal_code">
            <summary>
            zip
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vHealth_insurance_company">
            <summary>
            Insurance company
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vEntered_by_first_name">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vEntered_by_last_name">
            <summary>
            User last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vEntered_by_email">
            <summary>
            user email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.dBirth_date">
            <summary>
            Birthday yyyy-MM-dd
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.EZdravie.Request.RegisterPersonRequest.vGender">
            <summary>
            Gender - M | F
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceLimitation">
            <summary>
            We should not cancel the slots because of statistics reasons and existing registrations
            
            This object is intended to cancel all new visitors for specific time slots
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceLimitation.Id">
            <summary>
            Break id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceLimitation.PlaceId">
            <summary>
            Place id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceLimitation.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceLimitation.Until">
            <summary>
            Until
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceLimitation.HourLimit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Invitation">
            <summary>
            Admin can invite person to the place provider (company which manages the testing places)
            
            After user accepts invitation, admin can allocate him to the testing place at specific time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.InvitationId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.InviterName">
            <summary>
            Inviter
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.CompanyName">
            <summary>
            Inviter
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.InvitationMessage">
            <summary>
            invitation message
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.PlaceProviderId">
            <summary>
            Place provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.Status">
            <summary>
            Invitation status - invited | accepted | declined
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.InvitationTime">
            <summary>
            Time of the invitation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.StatusTime">
            <summary>
            Time of the invitation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invitation.LastUpdate">
            <summary>
            Returns last update of the invitation
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.InvitationStatus">
            <summary>
            Invitation.Status valid values
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.InvitationStatus.Invited">
            <summary>
            Invited
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.InvitationStatus.Accepted">
            <summary>
            Accepted
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.InvitationStatus.Declined">
            <summary>
            Declined
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Invoice">
            <summary>
            Invoice issued by the provider company to the PlaceProvider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.InvoiceId">
            <summary>
            ID eg 2010100001 .. the invoice number must be increment by one
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.IssuedOn">
            <summary>
            Date of issueance
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.Payable">
            <summary>
            Date when invoice must be payable
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceNoVATTotal">
            <summary>
            Total price without VAT
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceWithVATTotal">
            <summary>
            Total price with VAT
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.BuyerVAT">
            <summary>
            Buyer VAT
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.BuyerName">
            <summary>
            Buyer name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.BuyerID">
            <summary>
            Buyer trade registry ID
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PlaceProviderId">
            <summary>
            PlaceProvider identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.Description">
            <summary>
            Invoice description
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.SLAId">
            <summary>
            SLA id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceNoVATSLA">
            <summary>
            SLA no vat price
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceWithVATSLA">
            <summary>
            SLA vat price
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.Registrations">
            <summary>
            Number of registrations purchased
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceNoVATRegistrations">
            <summary>
            Registrations no vat price
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Invoice.PriceWithVATRegistrations">
            <summary>
            Registrations w vat price
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.ProformaInvoice">
            <summary>
            Prepayment invoice
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.MedicalOversight">
            <summary>
            Oversight
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.MedicalOversight.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.MedicalOversight.Name">
            <summary>
            Name of medical 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.MedicalOversight.From">
            <summary>
            From 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.MedicalOversight.Until">
            <summary>
            Until
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Mustache.TestRegistration">
            <summary>
            Variables for PDF generation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestPurpose">
            <summary>
            Purpose - 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.Category">
            <summary>
            AG or PCR
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.CategoryEN">
            <summary>
            English NAAT vs RAT
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestManufacturer">
            <summary>
            TestManufacturer
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestBrandName">
            <summary>
            Id of the test from product
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.RegistrationCode">
            <summary>
            RegistrationCode
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.PersonalNumber">
            <summary>
            Personal number or insurance number
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.PassportNumber">
            <summary>
            Passport number for foreigners
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.Date">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.DateResult">
            <summary>
            DateResult DateTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.FrontedURL">
            <summary>
            Link to testing place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.BarCode">
            <summary>
            Bar code
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.QRCode">
            <summary>
            QRCode
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestingEntity">
            <summary>
            Identification of testing provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestingName">
            <summary>
            Name of the testing place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.TestingAddress">
            <summary>
            Address where user has been tested
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.Product">
            <summary>
            Product - PCR or Antigen test
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestRegistration.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Mustache.TestResult">
            <summary>
            Variables for PDF generation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.PernamentAddress">
            <summary>
            Address where user has pernament residence
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Signature">
            <summary>
            Base64 encoded signature picture in png
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Text">
            <summary>
            Result in text
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.TextEN">
            <summary>
            Test result in english
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.TestBrandName">
            <summary>
            Id of the test from product
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.TestManufacturer">
            <summary>
            TestManufacturer
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.SampleOrigin">
            <summary>
            SampleOrigin
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Description">
            <summary>
            Result help
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.DescriptionEN">
            <summary>
            DescriptionEN
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.PersonalNumber">
            <summary>
            Personal number or insurance number
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.PassportNumber">
            <summary>
            Passport number for foreigners
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Date">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.DateResult">
            <summary>
            DateResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.DateResultEN">
            <summary>
            DateResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.DateEN">
            <summary>
            DateTime en
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.FrontedURL">
            <summary>
            Link to testing place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.VerifyURL">
            <summary>
            Link for verification url
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.QRVerificationURL">
            <summary>
            QR code for faster check lookup
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.TestingEntity">
            <summary>
            Identification of testing provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.TestingAddress">
            <summary>
            Address where user has been tested
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Product">
            <summary>
            Product - PCR or Antigen test
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.ResultGUID">
            <summary>
            ResultGUID
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.Oversight">
            <summary>
            Oversight
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Mustache.TestResult.EuFlag">
            <summary>
            Eu Flag above DGC
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.PersonAllocation">
            <summary>
            Allocate person to the testing place with specified role
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.End">
            <summary>
            End
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PersonAllocation.PlaceId">
            <summary>
            Allocated place id
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Place">
            <summary>
            This object holds all information about the testing place plus real time statistics about health/sick visitors
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Id">
            <summary>
            Place id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.PlaceProviderId">
            <summary>
            Id of the hospital or other place provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Name">
            <summary>
            Place name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer5MinSlot">
            <summary>
            Registration in minute slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer1HourSlot">
            <summary>
            Registration in hour slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Description">
            <summary>
            Description 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Lat">
            <summary>
            GPS lattitude
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Lng">
            <summary>
            GPS longtitude
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.IsDriveIn">
            <summary>
            Has drive in option
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.IsWalkIn">
            <summary>
            Has walk in option
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Registrations">
            <summary>
            Total number of registrations
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Healthy">
            <summary>
            Results of healthy results
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Sick">
            <summary>
            Results of covid positive results
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Picture1">
            <summary>
            Primary Picture
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Picture2">
            <summary>
            Second Picture
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Picture3">
            <summary>
            Third Picture
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.OpeningHoursWorkDay">
            <summary>
            Standard opening hours
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.OpeningHoursOther1">
            <summary>
            non Standard opening hours - weekend
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.OpeningHoursOther2">
            <summary>
            non Standard opening hours - holidays
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.HasReservationSystem">
            <summary>
            If set to false, the icon on the map should be differnt with the icon where reservation is possible
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.ExternalReservationSystem">
            <summary>
            Link to external reservation system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.RequiresRegistration">
            <summary>
            Is it possible to register on site or does it require preregistration?
            
            If true, place requires preregistration
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.IsVisible">
            <summary>
            Old testing places will not be visible
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.IsVisibleOnlyForAuthorized">
            <summary>
            Only for authorized - Do not show in public map, but show in private list
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.Queue">
            <summary>
            Queue in minutes
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.QueueLastUpdate">
            <summary>
            Queue last update time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.ManualQueueEntry">
            <summary>
            Queue in minutes
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.AvailableSlotsToday">
            <summary>
            AvailableSlotsToday
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.AvailableSlotsTodayUpdate">
            <summary>
            AvailableSlotsToday
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.EHealthId">
            <summary>
            eHealth Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.SupportName">
            <summary>
            Support name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.SupportEmail">
            <summary>
            Support Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.SupportPhone">
            <summary>
            Support Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.OtherLimitations">
            <summary>
            Limitations
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.MedicalOversight">
            <summary>
            Medical oversight
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceProduct">
            <summary>
            Product specified for specific place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.Id">
            <summary>
            Record Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.PlaceId">
            <summary>
            Place id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.From">
            <summary>
            Time from when the product is provided
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.Until">
            <summary>
            Time until when the product is provided
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.CustomPrice">
            <summary>
            Has custom price. If true, the price from this object is applied. If false, default price from product is applied
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.PriceCurrency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.PlaceProviderId">
            <summary>
            Place provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.InsuranceOnly">
            <summary>
            Insurance only
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.SchoolOnly">
            <summary>
            Only for parents who need the test for the school verification
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.EmployeesOnly">
            <summary>
            Corporations may check this on and only its employees are eligible for the testing
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.EHealthDefault">
            <summary>
            Default for eHealth connection
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.EmployeesRegistration">
            <summary>
            Corporations may check this on and only its employees can self register
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.CollectEmployeeNo">
            <summary>
            Collect employee id but do not verify it
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.CollectNationality">
            <summary>
            Nationality is required by some insurance companies
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProduct.CollectInsurance">
            <summary>
            Collect insurance organisation
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.PlaceProduct.ToExtendedModel(CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Extend
            </summary>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceProductWithPlace">
            <summary>
            Extended information about place product with product object filled in
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProductWithPlace.Product">
            <summary>
            Product
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceProvider">
            <summary>
            Place provider is hospital or company prividing testing place. One hospital can have multiple testing places.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.PlaceProviderId">
            <summary>
            ID 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.CompanyName">
            <summary>
            Hospital name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.CompanyId">
            <summary>
            hospital/company registration identifier from trade registry
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.VAT">
            <summary>
            VAT identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.MainEmail">
            <summary>
            Admin email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.MainEmailConfirmed">
            <summary>
            Email is confirmed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.PrivatePhone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.PhoneConfirmed">
            <summary>
            Phone confirmed by sms
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.PublicEmail">
            <summary>
            Public email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.PublicPhone">
            <summary>
            Public phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Logo">
            <summary>
            Logo in base64
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.CSS">
            <summary>
            Custom CSS
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Group2Emails">
            <summary>
            Users in groups. Dictionary key is the group id, value is list of users in that group
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.MainContact">
            <summary>
            Place provider private main contact name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Users">
            <summary>
            List of accepted invitations - users who can hr manage to places
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Allocations">
            <summary>
            List of person allocations
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.Products">
            <summary>
            List of products served by place provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.SupportName">
            <summary>
            Support name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.SupportEmail">
            <summary>
            Support Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProvider.SupportPhone">
            <summary>
            Support Phone
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.PlaceProvider.ToPublic">
            <summary>
            Convert to public info
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceProviderPublic">
            <summary>
            Public place provider information
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.PlaceProviderId">
            <summary>
            ID 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.CompanyName">
            <summary>
            Company name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.PublicEmail">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.PublicPhone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.SupportName">
            <summary>
            Support name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.SupportEmail">
            <summary>
            Support Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.SupportPhone">
            <summary>
            Support Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.Logo">
            <summary>
            Logo
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.CSS">
            <summary>
            CSS
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderPublic.Web">
            <summary>
            Web
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.PlaceProviderSensitiveData">
            <summary>
            Place provider sensitive data.. for example credentials to government ehealth service
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderSensitiveData.PlaceProviderId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderSensitiveData.EZdravieUser">
            <summary>
            eHealth username
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderSensitiveData.EZdraviePass">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderSensitiveData.LoginPayload">
            <summary>
            EHealth latest login payload
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.PlaceProviderSensitiveData.SessionValidity">
            <summary>
            Ehealth session validity
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Product">
            <summary>
            Product or service served by the place provider at testing places
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.Category">
            <summary>
            Category
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.Name">
            <summary>
            Name of the product or service
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.TestPurpose">
            <summary>
            disease or agent targeted
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.DgcIssuer">
            <summary>
            disease or agent targeted
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.IssuerId">
            <summary>
            IssuerId
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.SampleOrigin">
            <summary>
            SampleOrigin - nasal vs blood 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.Country">
            <summary>
            Member state 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.TestManufacturer">
            <summary>
            TestManufacturer
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.InsuranceOnly">
            <summary>
            Insurance only
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.SchoolOnly">
            <summary>
            Only for parents who need the test for the school verification
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.ExternalOnly">
            <summary>
            Only for external tests - Self tests or the bookkeeping of the testing records of employees
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.EmployeesOnly">
            <summary>
            Corporations may check this on and only its employees are eligible for the testing
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.EmployeesRegistration">
            <summary>
            Corporations may check this on and only its employees can self register
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.CollectEmployeeNo">
            <summary>
            Collect employee id but do not verify it
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.CollectNationality">
            <summary>
            Nationality is required by some insurance companies
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.EHealthDefault">
            <summary>
            Default for eHealth connection
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.CollectInsurance">
            <summary>
            Collect insurance organisation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.TestBrandName">
            <summary>
            Name of the test. Eg SD BIOSENSOR, Inc.; Roche, STANDARD Q COVID-19 Ag Test
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.All">
            <summary>
            Applied for all places
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.DefaultPrice">
            <summary>
            Default price. Admin can set the pricing other then default at the specific places
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.DefaultPriceCurrency">
            <summary>
            Price currency
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.CreatedOn">
            <summary>
            When the resource was created
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Product.LastUpdate">
            <summary>
            Time when resource was last updated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Id">
            <summary>
            Registration Identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Language">
            <summary>
            Language in which we will communicate to the visitor
            
            sk | en
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.FirstName">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.PersonType">
            <summary>
            Type of person
            
            idcard|child|foreign
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Passport">
            <summary>
            Passport number if person type is foreigner
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.RC">
            <summary>
            Personal number if person type is idcard or child
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.ZIP">
            <summary>
            ZIP - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.City">
            <summary>
            City - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Street">
            <summary>
            Street - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.StreetNo">
            <summary>
            StreetNo - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.CustomEmail">
            <summary>
            Email modified by person. If not empty this must be used for communication.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.CustomPhone">
            <summary>
            Phone modified by person. If not empty this must be used for communication.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.InsuranceCompany">
            <summary>
            InsuranceCompany
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Gender">
            <summary>
            Gender
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Department">
            <summary>
            Department
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Nationality">
            <summary>
            Nationality
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.CompanyIdentifiers">
            <summary>
            Identifier within the company
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.Created">
            <summary>
            Time when registration has been created
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.LastUpdate">
            <summary>
            Time when registration has been last updated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Registration.PlaceProviderId">
            <summary>
            Place Provider scope
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Result">
            <summary>
            This object hold the public information for the visitor result
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Result.Values">
            <summary>
            Available values in State
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Result.Values.NotFound">
            <summary>
            Not found
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Result.Values.Positive">
            <summary>
            Positive
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Result.Values.Negative">
            <summary>
            Negative
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Result.Values.ToRepeat">
            <summary>
            ToRepeat
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Result.Values.ResultTooSoon">
            <summary>
            If technical delay eg 15 minutes is not met from the testing time, the result should not be processed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.TestingSetId">
            <summary>
            Id of testing set
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.State">
            <summary>
            State. Available states are listed in Model.TestResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.VerificationId">
            <summary>
            Verification id is used to share the test results with others. It does not contain any sensitive data such as personal number, but it contains information when the visitor has taken the test with the test result and his name.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.Time">
            <summary>
            Time when result has been inserted
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.Matched">
            <summary>
            Matched with visitor
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Result.TimeIsValid">
            <summary>
            Returns true if time is valid
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.ExportTaskConfiguration">
            <summary>
            Export task configuraion
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.ExportTaskConfiguration.Emails">
            <summary>
            Send to list of emails
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.GoSMSConfiguration">
            <summary>
            GoSMS configuration https://doc.gosms.cz/
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSConfiguration.Endpoint">
            <summary>
            Endpoing
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSConfiguration.ClientId">
            <summary>
            Client identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSConfiguration.ClientSecret">
            <summary>
            Client Secret
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSConfiguration.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSConfiguration.CoHash">
            <summary>
            Logging info
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration">
            <summary>
            GoSMS Queue support
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.QueueURL">
            <summary>
            SQS Endpoint
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.SecretAccessKey">
            <summary>
            Client Secret
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.AccessKeyID">
            <summary>
            Client identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.GoSMSQueueConfiguration.CoHash">
            <summary>
            CoHash
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.MailGunConfiguration">
            <summary>
            Mailgun configuration
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.Endpoint">
            <summary>
            Endpoint
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.Domain">
            <summary>
            Sendgrid domain
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.ApiKey">
            <summary>
            Api key
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.MailerFromName">
            <summary>
            From name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.MailerFromEmail">
            <summary>
            From email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.CoHash">
            <summary>
            CoHash for logging purposes
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.ReplyToEmail">
            <summary>
            Reply to email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.MailGunConfiguration.ReplyToName">
            <summary>
            Reply to name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.NotifyWhenSickConfiguration">
            <summary>
            Configuration for notification when someone is sick
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.NotifyWhenSickConfiguration.Emails">
            <summary>
            Send to listed emails
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.PDFQRConfiguration">
            <summary>
            Settings for pdf generation
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.HostName">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.RabbitUserName">
            <summary>
            User
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.RabbitPassword">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.VirtualHost">
            <summary>
            Virtual host
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.QueueName">
            <summary>
            Queue name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.CoHash">
            <summary>
            Cohash for loging purposes
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.FromEmail">
            <summary>
            Send emails from email 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.FromName">
            <summary>
            Name of the person who seems to send the emails
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.ReplyToEmail">
            <summary>
            When person clicks on reply to, the email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQEmailQueueConfiguration.ReplyToName">
            <summary>
            When person clicks on reply to, the name who will reply to
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration">
            <summary>
            SMS Gateway through rabbit mq
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.HostName">
            <summary>
            Hostname
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.RabbitUserName">
            <summary>
            User
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.RabbitPassword">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.VirtualHost">
            <summary>
            Virtual host
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.QueueName">
            <summary>
            Queue name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.GatewayUser">
            <summary>
            User for gateway
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.RabbitMQSMSQueueConfiguration.CoHash">
            <summary>
            Cohash for loging purposes
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.SendGridConfiguration">
            <summary>
            configuration for mailing through sendgrid
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerApiKey">
            <summary>
            API key
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromName">
            <summary>
            From name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromEmail">
            <summary>
            From email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.CoHash">
            <summary>
            CoHash fo logging purposes
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.ReplyToEmail">
            <summary>
            Reply to email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.ReplyToName">
            <summary>
            Reply to name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.TestConfiguration">
            <summary>
            default values for tests
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.User">
            <summary>
            Configuration user
            
            Users in the configurataion cannot be deleted
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Name">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Email">
            <summary>
            Password will be sent to this email in first run
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Phone">
            <summary>
            Admin Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Password">
            <summary>
            Do not setup password. This is for tesing purposes only.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Roles">
            <summary>
            If not defined, Admin role is set
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SLA">
            <summary>
            Hospitals can negotiate multiple level of service level agreement
            
            This determines how much hardware is allocated to the place provider and his minimum level of requests per seconds.
            
            Shared means no hosting costs with no guarantee
            Bronze means low costs eg 20 EUR per day with dedicated hw. Usually purchased by small testing locations.
            Silver means mid costs eg 100 EUR per day with dedicated HW. Usually purchased by big testing locations or cities with multiple places.
            Gold means max availablilty dedicated for full scale government testing. For example 5 mil. people per two days.
            
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SLA.SLAId">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SLA.PlaceProviderId">
            <summary>
            Provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SLA.SLAType">
            <summary>
            Purchased SLA Type 
            
            Shared | Bronze | Silver | Gold
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SLA.From">
            <summary>
            Valid From
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SLA.Until">
            <summary>
            Valid Until
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SLALevel">
            <summary>
            SLA constants
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.SLALevel.Shared">
            <summary>
            shared infrastructure
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.SLALevel.Bronze">
            <summary>
            bronze infrastructure
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.SLALevel.Silver">
            <summary>
            silver infrastructure
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.SLALevel.Gold">
            <summary>
            gold infrastructure
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SLALevel.ValidateSLA(System.String)">
            <summary>
            validates sla level
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.Slot1Day">
            <summary>
            Day slot at specific place with registration stats
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.SlotId">
            <summary>
            id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.PlaceId">
            <summary>
            place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.TimeInCET">
            <summary>
            Time in UTC+01:00
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.Registrations">
            <summary>
            Registrations stats
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.OpeningHours">
            <summary>
            Opening hours in format 09:00-10:00
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Day.OpeningHoursTemplate">
            <summary>
            Template id to place opening hours definition
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Slot1Hour">
            <summary>
            Slot 1 hour
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.SlotId">
            <summary>
            id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.PlaceId">
            <summary>
            Place id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.TestingDayId">
            <summary>
            Day id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.TimeInCET">
            <summary>
            Time in UTC+01:00
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.DaySlotId">
            <summary>
            Day id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot1Hour.Registrations">
            <summary>
            Registrations
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Slot5Min">
            <summary>
            5 minute slot
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.SlotId">
            <summary>
            Slot id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.PlaceId">
            <summary>
            place id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.TestingDayId">
            <summary>
            Day id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.Time">
            <summary>
            Slot time object
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.TimeInCET">
            <summary>
            Time in UTC+01:00
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.TimeFromTicks">
            <summary>
            Time from ticks
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.HourSlotId">
            <summary>
            Hour slot id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.HourSlotCET">
            <summary>
            hour in cet
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.Description">
            <summary>
            Formatted time. Eg. 15:00 - 20:00
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Slot5Min.Registrations">
            <summary>
            Registrations stats
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.GoSMSAuthMessage">
            <summary>
            https://doc.gosms.cz/#ziskani-access-tokenu
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSAuthMessage.access_token">
            <summary>
            Token
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSAuthMessage.expires_in">
            <summary>
            Expire in seconds: 3600
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSAuthMessage.token_type">
            <summary>
            token type: bearer
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSAuthMessage.scope">
            <summary>
            scope: user
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.GoSMSSendMessage">
            <summary>
            https://doc.gosms.cz/#jak-poslat-zpravu
            
            curl -X POST "https://app.gosms.cz/api/v1/messages/" \
             -H "Content-Type: application/json" \
             -H "Authorization: Bearer {token}" \
             -d '{"message":"Hello","recipients":"111222333","channel":1}'
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSSendMessage.message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSSendMessage.recipients">
            <summary>
            recipients
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.GoSMSSendMessage.channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.ISMS">
            <summary>
            SMS abstraction class
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.ISMS.GetText">
            <summary>
            Returns text of sms message
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.NewUserSMS">
            <summary>
            New system user SMS
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.NewUserSMS.User">
            <summary>
            User
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.NewUserSMS.GetText">
            <summary>
            Generates message
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.PersonalDataRemovedSMS">
            <summary>
            Notification after we remove personal data from system
            
            Healthy people are allowed to remove their data from system.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.PersonalDataRemovedSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.PersonalDataRemovedSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.RegistrationChangedSMS">
            <summary>
            When registration has been changed, send sms message
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationChangedSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationChangedSMS.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationChangedSMS.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationChangedSMS.Place">
            <summary>
            Place
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.RegistrationChangedSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.RegistrationSMS">
            <summary>
            Registration SMS
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationSMS.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationSMS.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.RegistrationSMS.Place">
            <summary>
            Place
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.RegistrationSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.Message">
            <summary>
            Generic sms 
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.Message.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.Message.GetText">
            <summary>
            Returns sms text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.TestIsFinishedSMS">
            <summary>
            Test has been finished, person should take the certificate.
            
            We do not dispose medical information over SMS or Email. Person can check it online.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.TestIsFinishedSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.TestIsFinishedSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.TestIsInProcessingSMS">
            <summary>
            We notify person by sms after we match testing set with visitor
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.TestIsInProcessingSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.TestIsInProcessingSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.SMS.TestToRepeatSMS">
            <summary>
            Test must be repeated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.SMS.TestToRepeatSMS.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.SMS.TestToRepeatSMS.GetText">
            <summary>
            Generate sms message text
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.TestingDay">
            <summary>
            Registration day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TestingDay.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TestingDay.Registrations">
            <summary>
            Registrations stats
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TestingDay.Healthy">
            <summary>
            Healthy
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TestingDay.Sick">
            <summary>
            Sick
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.TextValue">
            <summary>
            Prepared for List in bootstrap-vue
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TextValue.Text">
            <summary>
            Display value
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TextValue.Value">
            <summary>
            Inner value
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.TimeUpdate">
            <summary>
            Time update action
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TimeUpdate.Type">
            <summary>
            Type - set | delete
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TimeUpdate.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TimeUpdate.PlaceId">
            <summary>
            Place .. If for all places, __ALL__ is defined
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.TimeUpdate.OpeningHoursTemplateId">
            <summary>
            Opening hours 1-3
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Token">
            <summary>
            Token management
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Token.Claims">
            <summary>
            Claim names
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Role">
            <summary>
            Roles claim identifier
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Name">
            <summary>
            Name claim identifier
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Email">
            <summary>
            Email claim identifier
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.PlaceProvider">
            <summary>
            Place provider claim identifier
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Token.GetEmail(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get email from claim
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.GetPlaceProvider(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get place provider from claim
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.GetName(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get name from claim
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsAdmin(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Checks if user is admin
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsPlaceProviderAdmin(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Returns true if the user is currently in the role of PP Admin.
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsPlaceAdmin(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IPlaceRepository,System.String)">
            <summary>
            Returns true if the user is currently in the role of PP Admin and acts on behalf of specific place.
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="placeRepository"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsPasswordProtected(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Check if user has password protected .. Created for demo users
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsRegistrationManager(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Checks if user has role Registration Manager
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsMedicTester(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Checks if user has role Medic Tester
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsMedicLab(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Checks if user has role Medic Lab
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsDocumentManager(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Check if user has role Document Manager
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsDataExporter(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Check if user has role Data exporter
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsAuthorizedToIssueInvoice(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,System.String)">
            <summary>
            Accountant or admin is authorized to issue invoice
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsAuthorizedToLogAsCompany(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,System.String)">
            <summary>
            Log in as company
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.CreateToken(CovidMassTesting.Model.User,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Method creates jwt token
            </summary>
            <param name="usr">User object</param>
            <param name="configuration">APP Configuran</param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.User">
            <summary>
            User model
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Email">
            <summary>
            User email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Phone">
            <summary>
            User phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Roles">
            <summary>
            List of roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.PswHash">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.CoHash">
            <summary>
            Cohash
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.CoData">
            <summary>
            CoData
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.InvalidLogin">
            <summary>
            Last invalid password attempt
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Place">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.PlaceLastCheck">
            <summary>
            Last time user has updated his location
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.User.ToPublic">
            <summary>
            Converts to public export (password is not sent out)
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.UserPublic">
            <summary>
            User public object
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Roles">
            <summary>
            List of roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Place">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.PlaceObj">
            <summary>
            In some cases fetch the place (eg in Me method)
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.PlaceLastCheck">
            <summary>
            Last time user has updated his location
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.VerificationData">
            <summary>
            VerificationData
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.Id">
            <summary>
            ResultGUID
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.Name">
            <summary>
            Person name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.Time">
            <summary>
            Testing time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.TestingEntity">
            <summary>
            Identification of testing provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.TestingAddress">
            <summary>
            Address where user has been tested
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VerificationData.Product">
            <summary>
            Product - PCR or Antigen test
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Version">
            <summary>
            API version information
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.InstanceIdentifier">
            <summary>
            Instance identifier. Every application runtime has its own guid. If 3 pods are launched in kubernetes, it is possible to identify instance by this identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.InstanceStartedAt">
            <summary>
            Last time when instance has been reset
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.ApplicationName">
            <summary>
            Application name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.DockerImageVersion">
            <summary>
            Docker image version
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.BuildNumber">
            <summary>
            Build number from devops or github actions
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.DLLVersion">
            <summary>
            Application dll version
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.BuildTime">
            <summary>
            Dll build time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.Culture">
            <summary>
            Culture info
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.EmailConfigured">
            <summary>
            Shows info weather email service is configured
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.RedisConfigured">
            <summary>
            Shows info weather persistant redis service is configured
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.SMSConfigured">
            <summary>
            Shows info weather SMS service is configured
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Version.StorageTest">
            <summary>
            Storage test
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Version.GetVersion(System.String,System.DateTimeOffset,System.String,Microsoft.Extensions.Configuration.IConfiguration,CovidMassTesting.Repository.Interface.IVisitorRepository)">
            <summary>
            Get version
            </summary>
            <param name="instanceId"></param>
            <param name="start"></param>
            <param name="dllVersion"></param>
            <param name="configuration"></param>
            <param name="visitorRepository"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.Visitor">
            <summary>
            Data stored in this object are encrypted
            
            Stores personal data, contact data as well as medical condition
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Id">
            <summary>
            Registration code. 9-digit, formatted 000-000-000 for visitors
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.PersonTrackingNumber">
            <summary>
            Covid pass
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Gender">
            <summary>
            Gender F | M
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Nationality">
            <summary>
            Nationality
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Language">
            <summary>
            Language in which we will communicate to the visitor
            
            sk | en
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.PersonType">
            <summary>
            Type of person
            
            idcard|child|foreign
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Passport">
            <summary>
            Passport number if person type is foreigner
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.RC">
            <summary>
            Personal number if person type is idcard or child
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.EmployeeId">
            <summary>
            Employee id if applicable
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.FirstName">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ZIP">
            <summary>
            ZIP - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.City">
            <summary>
            City - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Street">
            <summary>
            Street - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.StreetNo">
            <summary>
            StreetNo - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Address">
            <summary>
            Address - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Insurance">
            <summary>
            Insurance
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ChosenSlot">
            <summary>
            Chosen time slot
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ChosenSlotTime">
            <summary>
            ChosenSlotTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ChosenPlaceId">
            <summary>
            Chosen place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.PlaceName">
            <summary>
            Name of the place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.PlaceProviderId">
            <summary>
            ID of place provider
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Result">
            <summary>
            Test result. Available options are in Model.TestResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ResultNotifiedAt">
            <summary>
            Time when visitor has been notified with his status
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.TestingSet">
            <summary>
            Testing set identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.LastUpdate">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ResultNotifiedCount">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.SelfRegistration">
            <summary>
            Visitor has registered by himself
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.RegistrationUpdatedByManager">
            <summary>
            If administration worker changes the data we store this information
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.RegistrationTime">
            <summary>
            Registration time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.TestingTime">
            <summary>
            Real time when the test has been taken
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Enqueued">
            <summary>
            Time, when visitor has clicked that he is in the queue
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Product">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.ProductName">
            <summary>
            Name of the place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.VerificationId">
            <summary>
            Verification id is used to share the test results with others. It does not contain any sensitive data such as personal number, but it contains information when the visitor has taken the test with the test result and his name.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.Token">
            <summary>
            Captcha token. After it is used it is removed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.TestResultTime">
            <summary>
            Time when test has been confirmed by lab
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.LastStatusCheck">
            <summary>
            Time when user has checked his status last time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.EHealthNotifiedAt">
            <summary>
            Time when the result of the test was successfully sent to government system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.DownloadedAt">
            <summary>
            Time when the user was downloaded from external system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.VerifiedBy">
            <summary>
            Administration worker who has validated the person identity
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.VerifiedFromIP">
            <summary>
            Administration worker IP adddress
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Visitor.DGC">
            <summary>
            DGC QR code PNG base64
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Id">
            <summary>
            Registration code. 9-digit, formatted 000-000-000 for visitors
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.PersonTrackingNumber">
            <summary>
            Covid pass
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Gender">
            <summary>
            Gender F | M
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Nationality">
            <summary>
            Nationality
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Language">
            <summary>
            Language in which we will communicate to the visitor
            
            sk | en
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.PersonType">
            <summary>
            Type of person
            
            idcard|child|foreign
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Passport">
            <summary>
            Passport number if person type is foreigner
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.RC">
            <summary>
            Personal number if person type is idcard or child
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.EmployeeId">
            <summary>
            Employee id if applicable
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.FirstName">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ZIP">
            <summary>
            ZIP - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.City">
            <summary>
            City - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Street">
            <summary>
            Street - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.StreetNo">
            <summary>
            StreetNo - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Address">
            <summary>
            Address - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Insurance">
            <summary>
            Insurance
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ChosenSlot">
            <summary>
            Chosen time slot
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ChosenSlotTime">
            <summary>
            ChosenSlotTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ChosenPlaceId">
            <summary>
            Chosen place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Result">
            <summary>
            Test result. Available options are in Model.TestResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ResultNotifiedAt">
            <summary>
            Time when visitor has been notified by our notification methods
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.TestingSet">
            <summary>
            Testing set identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.LastUpdate">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.ResultNotifiedCount">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.SelfRegistration">
            <summary>
            Visitor has registered by himself
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.RegistrationUpdatedByManager">
            <summary>
            If administration worker changes the data we store this information
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.RegistrationTime">
            <summary>
            Registration time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.TestingTime">
            <summary>
            Real time when the test has been taken
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Enqueued">
            <summary>
            Time, when visitor has clicked that he is in the queue
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Product">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.VerificationId">
            <summary>
            Verification id is used to share the test results with others. It does not contain any sensitive data such as personal number, but it contains information when the visitor has taken the test with the test result and his name.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.Token">
            <summary>
            Captcha token. After it is used it is removed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.TestResultTime">
            <summary>
            Time when test has been confirmed by lab
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.EHealthNotifiedAt">
            <summary>
            Time when the result of the test was successfully sent to government system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.DownloadedAt">
            <summary>
            Time when the user was downloaded from external system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.VerifiedBy">
            <summary>
            Administration worker who has validated the person identity
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorAnonymized.VerifiedFromIP">
            <summary>
            Administration worker IP adddress
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.VisitorSimplified">
            <summary>
            NCZI - Datova veta pre registracny system Ag testov
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Meno">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Priezvisko">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.RodneCislo">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Telefon">
            <summary>
            Telefon
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Mail">
            <summary>
            Mail
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.PSC">
            <summary>
            PSC
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Mesto">
            <summary>
            Mesto
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Ulica">
            <summary>
            Ulica
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Cislo">
            <summary>
            Cislo
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.DatumVysetrenia">
            <summary>
            DatumVysetrenia
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.TypVysetrenia">
            <summary>
            DatumVysetrenia
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.VysledokVysetrenia">
            <summary>
            DatumVysetrenia
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorSimplified.Miesto">
            <summary>
            Miesto vysetrenia
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.VisitorTimezoned">
            <summary>
            Visitor in specified timezone
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.VisitorTimezoned.visitor">
            <summary>
            Parent visitor entity
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.VisitorTimezoned.#ctor(CovidMassTesting.Model.Visitor,System.TimeSpan)">
            <summary>
            Constructor
            </summary>
            <param name="visitor"></param>
            <param name="timezone"></param>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Id">
            <summary>
            Registration code. 9-digit, formatted 000-000-000 for visitors
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.PersonTrackingNumber">
            <summary>
            Covid pass
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Gender">
            <summary>
            Gender F | M
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Nationality">
            <summary>
            Nationality
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Language">
            <summary>
            Language in which we will communicate to the visitor
            
            sk | en
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.PersonType">
            <summary>
            Type of person
            
            idcard|child|foreign
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Passport">
            <summary>
            Passport number if person type is foreigner
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.RC">
            <summary>
            Personal number if person type is idcard or child
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.EmployeeId">
            <summary>
            Employee id if applicable
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.BirthDayDay">
            <summary>
            BirthDay - day
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.BirthDayMonth">
            <summary>
            BirthDay - month
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.BirthDayYear">
            <summary>
            BirthDay - year
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.FirstName">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ZIP">
            <summary>
            ZIP - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.City">
            <summary>
            City - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Street">
            <summary>
            Street - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.StreetNo">
            <summary>
            StreetNo - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Address">
            <summary>
            Address - Pernament address
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Insurance">
            <summary>
            Insurance
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ChosenSlot">
            <summary>
            Chosen time slot
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ChosenSlotTime">
            <summary>
            ChosenSlotTime
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ChosenPlaceId">
            <summary>
            Chosen place
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.PlaceName">
            <summary>
            Place name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.PlaceProviderId">
            <summary>
            PlaceProviderId
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Result">
            <summary>
            Test result. Available options are in Model.TestResult
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ResultNotifiedAt">
            <summary>
            Time when visitor has been notified by our notification methods
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.TestingSet">
            <summary>
            Testing set identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.LastUpdate">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ResultNotifiedCount">
            <summary>
            Last change
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.SelfRegistration">
            <summary>
            Visitor has registered by himself
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.RegistrationUpdatedByManager">
            <summary>
            If administration worker changes the data we store this information
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.RegistrationTime">
            <summary>
            Registration time
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.TestingTime">
            <summary>
            Real time when the test has been taken
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Enqueued">
            <summary>
            Time, when visitor has clicked that he is in the queue
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Product">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.ProductName">
            <summary>
            Product name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.VerificationId">
            <summary>
            Verification id is used to share the test results with others. It does not contain any sensitive data such as personal number, but it contains information when the visitor has taken the test with the test result and his name.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.Token">
            <summary>
            Captcha token. After it is used it is removed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.TestResultTime">
            <summary>
            Time when test has been confirmed by lab
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.LastStatusCheck">
            <summary>
            Last status
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.EHealthNotifiedAt">
            <summary>
            Time when the result of the test was successfully sent to government system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.DownloadedAt">
            <summary>
            Time when the user was downloaded from external system
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.VerifiedBy">
            <summary>
            Administration worker who has validated the person identity
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.VisitorTimezoned.VerifiedFromIP">
            <summary>
            Administration worker IP adddress
            </summary>
        </member>
        <member name="T:CovidMassTesting.Program">
            <summary>
            App
            </summary>
        </member>
        <member name="M:CovidMassTesting.Program.Main(System.String[])">
            <summary>
            Main entry point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:CovidMassTesting.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates web
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IPlaceProviderRepository">
            <summary>
            Place repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.Delete(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Admin can remove place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.Register(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Registers place provider
            </summary>
            <param name="testingPlaceProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListPublic">
            <summary>
            Returns list of public information of test providers
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListPrivate(System.String,System.Boolean)">
            <summary>
            Returns list of test providers with full information
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetPriceWithoutVAT(System.String,System.Int32,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Get price
            </summary>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="from"></param>
            <param name="until"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetPriceWithoutVATSLA(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            PriceWithoutVAT SLA
            </summary>
            <param name="slaLevel"></param>
            <param name="currency"></param>
            <param name="from"></param>
            <param name="until"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetPriceWithoutVATRegistrations(System.Int32,System.String)">
            <summary>
            PriceWithoutVAT Registrations
            </summary>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.IssueProformaInvoice(System.String,System.String,System.Int32,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            issues proforma invoice
            </summary>
            <param name="placeProviderId"></param>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="slaFrom"></param>
            <param name="slaUntil"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.IssueProformaInvoiceRegistrations(System.String,System.Int32,System.String)">
            <summary>
            issues proforma invoice only for registrations
            </summary>
            <param name="placeProviderId"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetVATMultiplier(System.String)">
            <summary>
            GetVATMultiplier
            </summary>
            <param name="country"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.InAnyGroup(System.String,System.String,System.String[])">
            <summary>
            Check permissions
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <param name="vs"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetPlaceProvider(System.String)">
            <summary>
            Returns place provider
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetUserGroups(System.String,System.String)">
            <summary>
            Return user groups scoped to place provider
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.SetPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Save place provider
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.AllocatePerson(CovidMassTesting.Model.PersonAllocation,System.String)">
            <summary>
            Allocates person to place provider
            </summary>
            <param name="allocation"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListAllocations(System.String)">
            <summary>
            List allocations
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.RemovePersonAllocation(System.String,System.String)">
            <summary>
            Removes allocation
            </summary>
            <param name="allocationId"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListProducts(System.String)">
            <summary>
            Administrator is allowed to list pp products
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.AddProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to create product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.SetProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to update product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.DeleteProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to delete product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListPlaceProductByCategory(System.String)">
            <summary>
            ListPlaceProductByCategory
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetProduct(System.String,System.String)">
            <summary>
            Get product
            </summary>
            <param name="placeProviderId"></param>
            <param name="productId"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.SetPlaceProviderSensitiveData(CovidMassTesting.Model.PlaceProviderSensitiveData,System.Boolean)">
            <summary>
            Set place provider highly sensitive data - store them encrypted in database
            </summary>
            <param name="data"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.GetPlaceProviderSensitiveData(System.String)">
            <summary>
            Load PP sensitive data
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ListAll">
            <summary>
            List all place providers
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceProviderRepository.ExtendByAllProducts(System.Collections.Generic.List{CovidMassTesting.Model.PlaceProduct},CovidMassTesting.Model.PlaceProvider,System.String[])">
            <summary>
            Add to export the all products
            </summary>
            <param name="ret"></param>
            <param name="pp"></param>
            <param name="placeIds"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IPlaceRepository">
            <summary>
            Place repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.DecrementPlaceRegistrations(System.String)">
            <summary>
            Decrement registrations at place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceRegistrations(System.String)">
            <summary>
            Increment registrations at place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceHealthy(System.String)">
            <summary>
            increment healthy visitors
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceSick(System.String)">
            <summary>
            increment sick visitors
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.GetPlace(System.String)">
            <summary>
            Returns place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.ListAll">
            <summary>
            List all places
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.SetPlace(CovidMassTesting.Model.Place)">
            <summary>
            Set new place object
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Admin can remove place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.SetProductPlace(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Create/Update product place
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.DeletePlaceProduct(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Delete product place
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.ListPlaceProductByPlace(System.String)">
            <summary>
            List by place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.ListPlaceProductByPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            List by pp
            </summary>
            <param name="placeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.GetPlaceProduct(System.String)">
            <summary>
            Get product place
            </summary>
            <param name="placeProductid"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.ISlotRepository">
            <summary>
            Slot repositotory interface
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.Add(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Add 1 day slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.Add(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Add 1 hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.Add(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Add 5 min slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DecrementRegistrationDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Decrement registration
            </summary>
            <param name="slotD"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DecrementRegistrationHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Decrement registration
            </summary>
            <param name="slotH"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DecrementRegistration5MinSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Decrement registration
            </summary>
            <param name="slotM"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.IncrementRegistrationDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Increment registration
            </summary>
            <param name="slotD"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.IncrementRegistrationHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Increment registration
            </summary>
            <param name="slotH"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.IncrementRegistration5MinSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Increment registration
            </summary>
            <param name="slotM"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.GetDaySlot(System.String,System.Int64)">
            <summary>
            Get day slot
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.ListDaySlotsByPlace(System.String)">
            <summary>
            List day slots by place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.GetHourSlot(System.String,System.Int64)">
            <summary>
            Get hour slot
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.ListHourSlotsByPlaceAndDaySlotId(System.String,System.Int64)">
            <summary>
            List hour slots by place and day
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.Get5MinSlot(System.String,System.Int64)">
            <summary>
            Get 5 min slot
            </summary>
            <param name="placeId"></param>
            <param name="minuteSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.ListMinuteSlotsByPlaceAndHourSlotId(System.String,System.Int64)">
            <summary>
            List minute slots by hour and place
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.CheckSlots(System.Int64,System.String,System.String,System.Int32)">
            <summary>
            Checks slots by admin and creates them if any for any place is missing
            </summary>
            <param name="testingDay"></param>
            <param name="placeId"></param>
            <param name="openingHours"></param>
            <param name="openingHoursTemplate"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.GetCurrentSlot(System.String,System.DateTimeOffset)">
            <summary>
            Get current slot
            </summary>
            <param name="place">Place id</param>
            <param name="time">Time when the registration should be done</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.IncrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            Increment Slot Stats
            </summary>
            <param name="statsType"></param>
            <param name="slotType"></param>
            <param name="placeId"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DecrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            Decrement slot stats
            </summary>
            <param name="statsType"></param>
            <param name="slotType"></param>
            <param name="placeId"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            DropAllStats
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.FixAllSlots">
            <summary>
            Fix slots
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.SetHourSlot(CovidMassTesting.Model.Slot1Hour,System.Boolean)">
            <summary>
            Set hour slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.SetMinuteSlot(CovidMassTesting.Model.Slot5Min,System.Boolean)">
            <summary>
            Set hour slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.SetDaySlot(CovidMassTesting.Model.Slot1Day,System.Boolean)">
            <summary>
            Set hour slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DeleteDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Removes hour slot
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DeleteHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Removes hour slot
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.ISlotRepository.DeleteMinuteSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Removes hour slot
            </summary>
            <param name="hour"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IUserRepository">
            <summary>
            User repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Add(CovidMassTesting.Model.User,System.String,System.String,System.Boolean)">
            <summary>
            Create user
            </summary>
            <param name="user"></param>
            <param name="inviterName"></param>
            <param name="companyName"></param>
            <param name="allowUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ListAll(System.String)">
            <summary>
            List all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.CreateAdminUsersFromConfiguration">
            <summary>
            Create admins from configuration
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Preauthenticate(System.String)">
            <summary>
            Returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Authenticate(System.String,System.String)">
            <summary>
            Authenticates user
            Returns jwt if successful
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            Change user password
            </summary>
            <param name="email"></param>
            <param name="oldHash"></param>
            <param name="newHash"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Remove(System.String)">
            <summary>
            Deletes user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.InAnyGroup(System.String,System.String[],System.String)">
            <summary>
            Checks if user is in any of selected groups
            </summary>
            <param name="email"></param>
            <param name="role"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.SetLocation(System.String,System.String,System.String)">
            <summary>
            Registration Manager can select place. All his registrations will be placed at this location
            </summary>
            <param name="email"></param>
            <param name="placeId"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.GetPublicUser(System.String)">
            <summary>
            Get public user data.. eg location
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.SetPlaceProvider(System.String,System.String)">
            <summary>
            Issue token with new place provider
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.DropDatabaseAuthorize(System.String,System.String)">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ProcessInvitation(System.String,System.Boolean,System.String)">
            <summary>
            Accept or deny invitation
            </summary>
            <param name="invitationId"></param>
            <param name="accepted"></param>
            <param name="userEmail"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Invite(CovidMassTesting.Model.Invitation)">
            <summary>
            Invite person to the place provider company
            </summary>
            <param name="invitation"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ListInvitationsByEmail(System.String)">
            <summary>
            ListInvitationsByEmail
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ListInvitationsByPP(System.String)">
            <summary>
            ListInvitationsByEmail
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ResetPassword(System.String,System.String)">
            <summary>
            Reset user password
            </summary>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IVisitorRepository">
            <summary>
            Visitor repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Add(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Creates new visitor
            </summary>
            <param name="visitor"></param>
            <param name="notify">if notify is set to false, it will not send email or sms</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.SetVisitor(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Sets the visitor to the database
            </summary>
            <param name="visitor"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetTest(System.Int32,System.String)">
            <summary>
            Get test result for public
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.RemoveTest(System.Int32,System.String)">
            <summary>
            Removes test on wish of user when visitor was tested negative
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.UpdateTestingState(System.Int32,System.String,System.Boolean)">
            <summary>
            Update test state of visitor
            </summary>
            <param name="code"></param>
            <param name="state"></param>
            <param name="silent">If true, do not send sms or email</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ConnectVisitorToTest(System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Bind visitor to specific test
            </summary>
            <param name="codeInt"></param>
            <param name="testCodeClear"></param>
            <param name="adminWorker"></param>
            <param name="adminPlaceProviderId"></param>
            <param name="ipAddress"></param>
            <param name="silent">Do not send email/SMS</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetVisitor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Load visitor
            </summary>
            <param name="codeInt"></param>
            <param name="fixOnLoad"></param>
            <param name="silent">If silent, do not log .. must log batch in parent call</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Register(CovidMassTesting.Model.Visitor,System.String,System.Boolean)">
            <summary>
            Public registration
            </summary>
            <param name="visitor"></param>
            <param name="managerEmail"></param>
            <param name="notify">If notify is set to false, it does not send email or sms</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.SetTestResult(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Set test result
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <param name="isAdmin">Send right away</param>
            <param name="silent">Do not send SMS or Email</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetVisitorByPersonalNumber(System.String,System.Boolean)">
            <summary>
            Get visitor by personal number
            </summary>
            <param name="personalNumber"></param>
            <param name="nullOnMissing">If true returns null not found, if false throws exception</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetNextTest">
            <summary>
            Document manager can fetch one visitor from executed tests
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.RemoveFromDocQueueAndSetTestStateAsTaken(System.String,System.Boolean)">
            <summary>
            Removes test from test queue and mark test as taken
            </summary>
            <param name="testId"></param>
            <param name="isAdmin"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListSickVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            Lists all sick visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListTestedVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Lists all tested visitors
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId"></param>
            <param name="silent"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListAnonymizedVisitors(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            ListAnonymizedVisitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListVisitorsInProcess(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            This method exports all visitors who are in state in processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListAllVisitorsWhoDidNotCome(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            This method exports all visitors who are in state in processing
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListAllVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List all
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListAllVisitorsOrig(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            ListAllVisitorsOrig
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListAllVisitorsAtPlace(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Int32)">
            <summary>
            List all at place
            </summary>
            <param name="placeId"></param>
            <param name="fromRegTime"></param>
            <param name="untilRegTime"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ProofOfWorkExport(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32,System.String)">
            <summary>
            ProofOfWorkExport
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ListExportableDays">
            <summary>
            ListExportableDays
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.TestStorage">
            <summary>
            Test storage
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GenerateResultHTML(CovidMassTesting.Model.Visitor,System.String,System.String,CovidMassTesting.Model.Product,System.String,System.String)">
            <summary>
            Creates html source code for pdf generation
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <param name="testBrandName"></param>
            <param name="resultguid"></param>
            <param name="oversight"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Enqueued(System.Int32,System.String)">
            <summary>
            Enqueue visitor
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GenerateResultPDF(CovidMassTesting.Model.Visitor,System.String,System.String,CovidMassTesting.Model.Product,System.String,System.Boolean,System.String)">
            <summary>
            Creates pdf from test result
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <param name="resultguid"></param>
            <param name="sign">Sign and password protect</param>
            <param name="oversight"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetResultVerification(System.String)">
            <summary>
            Decode visitor data from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetPublicPDF(System.Int32,System.String)">
            <summary>
            Generate and sign PDF with test result
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetResultPDFByEmployee(System.Int32,System.String)">
            <summary>
            Generate unsigned PDF for printing usage
            </summary>
            <param name="code"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ResendResults(System.Int32,System.String)">
            <summary>
            Allow person to request one resend for free
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Fix01">
            <summary>
            Temp fix
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Fix02">
            <summary>
            Temp fix
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Fix03">
            <summary>
            Temp fix
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixStats">
            <summary>
            FixStats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixVisitorRC">
            <summary>
            Fix rc map
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixTestingTime">
            <summary>
            Fix rc map
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixVerificationData">
            <summary>
            Returns number of corrected verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixSendRegistrationSMS">
            <summary>
            FixSendRegistrationSMS
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixMapVisitorToDay">
            <summary>
            FixMapVisitorToDay
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixBirthYear">
            <summary>
            Fix year
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FixPersonPlace(System.String,System.String,System.String)">
            <summary>
            Fix place by person id ad day
            </summary>
            <param name="day"></param>
            <param name="newPlaceId"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ProcessSingle">
            <summary>
            Process single result
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.SetResultObject(CovidMassTesting.Model.Result,System.Boolean)">
            <summary>
            Set result
            </summary>
            <param name="result"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.FormatDocument(System.String)">
            <summary>
            Format personal number or passport
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.SetRegistration(CovidMassTesting.Model.Registration,System.Boolean)">
            <summary>
            Long term Registration
            </summary>
            <param name="registration"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.MakeCompanyPeronalNumberHash(System.String,System.String)">
            <summary>
            Make hash from company personal number
            </summary>
            <param name="companyId"></param>
            <param name="employeeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.IncrementStats(System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Increment stats
            </summary>
            <param name="statsType"></param>
            <param name="placeId"></param>
            <param name="placeProviderId"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetPPStats(System.String,System.String)">
            <summary>
            Get the place provider stats
            </summary>
            <param name="statsType"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.DownloadWalletDGC(System.Int32,System.String)">
            <summary>
            DownloadWalletDGC
            </summary>
            <param name="codeInt"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetRegistrationIdFromHashedId(System.String)">
            <summary>
            RegistrationId From Hashed Id
            </summary>
            <param name="hashedId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetRegistration(System.String)">
            <summary>
            Loads registration
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GETVisitorCodeFromTesting(System.String)">
            <summary>
            GETVisitorCodeFromTesting code
            </summary>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ExportRegistrations(System.Int32,System.Int32,System.String)">
            <summary>
            Company registrations export
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId">PP Scope</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ExportResultSubmissions(System.Int32,System.Int32,System.Collections.Generic.HashSet{System.String})">
            <summary>
            ExportResultSubmissions
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <param name="places"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Reset the stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.DropAllRegistrations">
            <summary>
            Global admin task to reset registrations
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.AddToResultQueue(System.String)">
            <summary>
            AddToResultQueue
            </summary>
            <param name="resultId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.DeleteOldVisitors(System.Int32)">
            <summary>
            Delete visitors older then N days
            </summary>
            <param name="daysToKeep"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.NotifyWhenSick(CovidMassTesting.Model.Visitor)">
            <summary>
            Notifies personell when sick person is found
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository">
            <summary>
            Place mock repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Repository.Interface.IPlaceRepository)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
            <param name="placeRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.SetPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            set
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.GetPlaceProvider(System.String)">
            <summary>
            get
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.ListAll">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.DeletePlace(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Delete place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.CombinePPWithCategory(System.String,System.String)">
            <summary>
            CombinePPWithCategory
            </summary>
            <param name="category"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.ListPPIdsByCategory(System.String)">
            <summary>
            ListPPIdsByCategory
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceProviderRepository.DropAllData">
            <summary>
            Deletes all data
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.PlaceRepository">
            <summary>
            Place mock repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.SetPlace(CovidMassTesting.Model.Place)">
            <summary>
            Set place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.GetPlace(System.String)">
            <summary>
            Get place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.ListAll">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.DeletePlace(CovidMassTesting.Model.Place)">
            <summary>
            Delete place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.GetPlaceProduct(System.String)">
            <summary>
            Get
            </summary>
            <param name="placeProductid"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.SetProductPlace(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Set
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.DeletePlaceProduct(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            DeleteProductPlace
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.ListPlaceProductByPlace(System.String)">
            <summary>
            List by place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.ListPlaceProductByPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            list by pp
            </summary>
            <param name="placeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.PlaceRepository.DropAllData">
            <summary>
            Deletes all data
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.SlotRepository">
            <summary>
            Slot mock repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.SlotRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient)">
            <summary>
            constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DeleteDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Deletes single day slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DeleteHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Deletes single hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DeleteMinuteSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Deletes single minute slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.SetDaySlot(CovidMassTesting.Model.Slot1Day,System.Boolean)">
            <summary>
            Set
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.SetHourSlot(CovidMassTesting.Model.Slot1Hour,System.Boolean)">
            <summary>
            Set hour slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.RemoveSlotH(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Remove hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.SetMinuteSlot(CovidMassTesting.Model.Slot5Min,System.Boolean)">
            <summary>
            Set minute slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.Get5MinSlot(System.String,System.Int64)">
            <summary>
            Get
            </summary>
            <param name="placeId"></param>
            <param name="minuteSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetDaySlot(System.String,System.Int64)">
            <summary>
            Get
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetHourSlot(System.String,System.Int64)">
            <summary>
            Get
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.ListDaySlotsByPlace(System.String)">
            <summary>
            List
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.ListHourSlotsByPlaceAndDaySlotId(System.String,System.Int64)">
            <summary>
            List
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.ListMinuteSlotsByPlaceAndHourSlotId(System.String,System.Int64)">
            <summary>
            List
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.IncrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            Increment stats
            </summary>
            <param name="statsType"></param>
            <param name="slotType"></param>
            <param name="placeId"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DecrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            Decrement stats
            </summary>
            <param name="statsType"></param>
            <param name="slotType"></param>
            <param name="placeId"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Drop stats from time or all
            </summary>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.Int64)">
            <summary>
            Return stats for specific place and time
            </summary>
            <param name="statsType"></param>
            <param name="slotType"></param>
            <param name="placeId"></param>
            <param name="slotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetSlotKeysD">
            <summary>
            Day slots keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetSlotKeysH">
            <summary>
            Hour slots keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.SlotRepository.GetSlotKeysM">
            <summary>
            Minute slots keys
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.UserRepository">
            <summary>
            In memory user repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.MockRepository.UserRepository},Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.UserRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender,CovidMassTesting.Controllers.SMS.ISMSSender,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            constructor
            </summary>
            <param name="localizer"></param>
            <param name="localizer2"></param>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
            <param name="smsSender"></param>
            <param name="placeRepository"></param>
            <param name="placeProviderRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.SetUser(CovidMassTesting.Model.User,System.Boolean)">
            <summary>
            set user
            </summary>
            <param name="user"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.GetUser(System.String,System.String)">
            <summary>
            Gets user
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.ListAll(System.String)">
            <summary>
            Returns all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.GetInvitation(System.String)">
            <summary>
            Get invitation
            </summary>
            <param name="invitationId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.ListInvitationsByPP(System.String)">
            <summary>
            List invitations for place provider
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.ListInvitationsByEmail(System.String)">
            <summary>
            List user invitations
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.SetInvitation(CovidMassTesting.Model.Invitation,System.Boolean)">
            <summary>
            New invitation
            </summary>
            <param name="invitation"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.Remove(System.String)">
            <summary>
            Removes user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.VisitorRepository">
            <summary>
            Visitor mock repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.VisitorRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender,CovidMassTesting.Controllers.SMS.ISMSSender,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.ISlotRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Connectors.IMojeEZdravie)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
            <param name="smsSender"></param>
            <param name="placeRepository"></param>
            <param name="slotRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="userRepository"></param>
            <param name="eHealthConnector"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.SetVisitor(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Set visitor
            </summary>
            <param name="visitor"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.RemoveFromDocQueue(System.String)">
            <summary>
            remove from doc queue
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.AddToDocQueue(System.String)">
            <summary>
            add to doc queue
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.GetFirstItemFromQueue">
            <summary>
            Get first item in doc queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.GetVisitor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            loads visitor by code
            </summary>
            <param name="codeInt"></param>
            <param name="fixOnLoad"></param>
            <param name="silent"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.ListAllKeys(System.Nullable{System.DateTimeOffset})">
            <summary>
            List all keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.GETVisitorCodeFromPersonalNumber(System.String)">
            <summary>
            Get
            </summary>
            <param name="personalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.GETVisitorCodeFromTesting(System.String)">
            <summary>
            Get
            </summary>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.MapPersonalNumberToVisitorCode(System.String,System.Int32)">
            <summary>
            map personal number to visitor code
            </summary>
            <param name="personalNumber"></param>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.MapTestingSetToVisitorCode(System.Int32,System.String)">
            <summary>
            Map testing set to visitor code
            </summary>
            <param name="codeInt"></param>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.UnMapPersonalNumber(System.String)">
            <summary>
            Unmap personal number
            </summary>
            <param name="personalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.UnMapTestingSet(System.String)">
            <summary>
            Unmap testing set
            </summary>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.Remove(System.Int32)">
            <summary>
            Removes id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.DropAllData">
            <summary>
            delete all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.TestStorage">
            <summary>
            Tests the storage
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.GetResultVerification(System.String)">
            <summary>
            Decode visitor data from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.SetResult(CovidMassTesting.Model.VerificationData,System.Boolean)">
            <summary>
            Encode visitor data and store to database
            </summary>
            <param name="verificationData"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Reset stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.VisitorRepository.DropAllRegistrations">
            <summary>
            Drop all registrations
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository">
            <summary>
            Redis place repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Repository.Interface.IPlaceRepository)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
            <param name="placeRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.SetProInvoice(CovidMassTesting.Model.ProformaInvoice)">
            <summary>
            Set place
            </summary>
            <param name="invoice"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ProInvoiceGetLastId">
            <summary>
            Get last id
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ProInvoiceSetLastId(System.Int32)">
            <summary>
            Get last id
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListAllProInvoices">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.SetRealInvoice(CovidMassTesting.Model.Invoice)">
            <summary>
            Set real invoice
            </summary>
            <param name="invoice"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.RealInvoiceGetLastId">
            <summary>
            Get last id
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.RealInvoiceSetLastId(System.Int32)">
            <summary>
            Get last id
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListAllRealInvoices">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetPlaceProvider(System.String)">
            <summary>
            Get place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.SetPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Set place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.SetPlaceProviderSensitiveData(CovidMassTesting.Model.PlaceProviderSensitiveData,System.Boolean)">
            <summary>
            Set place provider highly sensitive data - store them encrypted in database
            </summary>
            <param name="data"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetPlaceProviderSensitiveData(System.String)">
            <summary>
            Load PP sensitive data
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.Delete(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Deletes place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListAll">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetPriceWithoutVAT(System.String,System.Int32,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Calculate price of service
            </summary>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="from"></param>
            <param name="until"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetPriceWithoutVATSLA(System.String,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Calculate price of service
            </summary>
            <param name="slaLevel"></param>
            <param name="currency"></param>
            <param name="from"></param>
            <param name="until"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetPriceWithoutVATRegistrations(System.Int32,System.String)">
            <summary>
            Calculate price of service
            </summary>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListPrivate(System.String,System.Boolean)">
            <summary>
            Admin can list private info
            </summary>
            <param name="email"></param>
            <param name="isAdmin"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListPublic">
            <summary>
            Public info of all place providers
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.Register(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            Registers as place provider
            </summary>
            <param name="placeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.IssueProformaInvoiceRegistrations(System.String,System.Int32,System.String)">
            <summary>
            Issues the proforma invoice for registrations
            </summary>
            <param name="placeProviderId"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.IssueProformaInvoice(System.String,System.String,System.Int32,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Issues the proforma invoice
            </summary>
            <param name="placeProviderId"></param>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="slaFrom"></param>
            <param name="slaUntil"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.IssueRealInvoiceRegistrations(System.String,System.Int32,System.String)">
            <summary>
            Issues the proforma invoice for registrations
            </summary>
            <param name="placeProviderId"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.IssueRealInvoice(System.String,System.String,System.Int32,System.String,System.DateTimeOffset,System.DateTimeOffset)">
            <summary>
            Issues the proforma invoice
            </summary>
            <param name="placeProviderId"></param>
            <param name="slaLevel"></param>
            <param name="registrations"></param>
            <param name="currency"></param>
            <param name="slaFrom"></param>
            <param name="slaUntil"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetVATMultiplier(System.String)">
            <summary>
            Return tax multiplier
            </summary>
            <param name="country"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.InAnyGroup(System.String,System.String,System.String[])">
            <summary>
            Check if user is in specified group in place provider company
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetUserGroups(System.String,System.String)">
            <summary>
            Return user groups scoped to place provider
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.AllocatePerson(CovidMassTesting.Model.PersonAllocation,System.String)">
            <summary>
            Allocate person to place
            </summary>
            <param name="allocation"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.RemovePersonAllocation(System.String,System.String)">
            <summary>
            Removes person allocation at place
            </summary>
            <param name="allocationId"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListAllocations(System.String)">
            <summary>
            List allocations
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListProducts(System.String)">
            <summary>
            Administrator is allowed to list pp products
            </summary>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.AddProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to create product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.SetProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to update product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.DeleteProduct(System.String,CovidMassTesting.Model.Product)">
            <summary>
            Administrator is allowed to delete product or service which he sells or serve at the testing place
            </summary>
            <param name="placeProviderId"></param>
            <param name="product"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.GetProduct(System.String,System.String)">
            <summary>
            Get product
            </summary>
            <param name="placeProviderId"></param>
            <param name="productId"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.CombinePPWithCategory(System.String,System.String)">
            <summary>
            Add pp with category
            </summary>
            <param name="category"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListPPIdsByCategory(System.String)">
            <summary>
            ListPPIdsByCategory
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.ListPlaceProductByCategory(System.String)">
            <summary>
            ListPlaceProductByCategory
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceProviderRepository.DropAllData">
            <summary>
            Drop all data in repository
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.PlaceRepository">
            <summary>
            Redis place repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.PlaceRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.SetPlace(CovidMassTesting.Model.Place)">
            <summary>
            Set place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.DecrementPlaceRegistrations(System.String)">
            <summary>
            Decrement registrations
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.IncrementPlaceRegistrations(System.String)">
            <summary>
            Increment registrations
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.IncrementPlaceHealthy(System.String)">
            <summary>
            increment health stats
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.IncrementPlaceSick(System.String)">
            <summary>
            Increment sick stats
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.GetPlace(System.String)">
            <summary>
            Get place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.ListAll">
            <summary>
            List all
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Deletes place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.SetProductPlace(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Create/Update product place
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.DeletePlaceProduct(CovidMassTesting.Model.PlaceProduct)">
            <summary>
            Delete product place
            </summary>
            <param name="placeProduct"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.GetPlaceProduct(System.String)">
            <summary>
            Get product place
            </summary>
            <param name="placeProductid"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.ListPlaceProductByPlace(System.String)">
            <summary>
            List by place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.ListPlaceProductByPlaceProvider(CovidMassTesting.Model.PlaceProvider)">
            <summary>
            List by pp
            </summary>
            <param name="placeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.PlaceRepository.DropAllData">
            <summary>
            Drop all data in repository
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.SlotRepository">
            <summary>
            Slot repository manages db of time slots for sampling places
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.SlotRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.SlotRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.CheckSlots(System.Int64,System.String,System.String,System.Int32)">
            <summary>
            Checks if all slots for the day, and testing place has been created
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.IncrementRegistrationDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Increment registration for day slot
            </summary>
            <param name="slotD"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.IncrementRegistrationHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Increment registrations for hour slot
            </summary>
            <param name="slotH"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.IncrementRegistration5MinSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Increment registrations for minute slot
            </summary>
            <param name="slotM"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DecrementRegistrationDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Decrement registrations for day slot
            </summary>
            <param name="slotD"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DecrementRegistrationHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Decrement registrations for hour slot
            </summary>
            <param name="slotH"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DecrementRegistration5MinSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Decrement registrations for minute slot
            </summary>
            <param name="slotM"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.IncrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            Increment stats
            </summary>
            <param name="statsType">Model.StatsType.*</param>
            <param name="slotType"></param>
            <param name="time"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DecrementStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.DateTimeOffset)">
            <summary>
            DecrementStats
            </summary>
            <param name="statsType">Model.StatsType.*</param>
            <param name="slotType"></param>
            <param name="time"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetStats(CovidMassTesting.Model.StatsType.Enum,CovidMassTesting.Model.Enums.SlotType.Enum,System.String,System.Int64)">
            <summary>
            DecrementStats
            </summary>
            <param name="statsType">Model.StatsType.*</param>
            <param name="slotType"></param>
            <param name="slotId"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Drop all stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.Add(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Create day slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.Add(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Create hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.Add(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Create minute slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.SetDaySlot(CovidMassTesting.Model.Slot1Day,System.Boolean)">
            <summary>
            Updates day slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.SetHourSlot(CovidMassTesting.Model.Slot1Hour,System.Boolean)">
            <summary>
            Updates hour slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.RemoveSlotH(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Remove hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.SetMinuteSlot(CovidMassTesting.Model.Slot5Min,System.Boolean)">
            <summary>
            Updates minute slot
            </summary>
            <param name="slot"></param>
            <param name="newOnly"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DeleteDaySlot(CovidMassTesting.Model.Slot1Day)">
            <summary>
            Deletes day slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DeleteHourSlot(CovidMassTesting.Model.Slot1Hour)">
            <summary>
            Deletes hour slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DeleteMinuteSlot(CovidMassTesting.Model.Slot5Min)">
            <summary>
            Updates minute slot
            </summary>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetDaySlot(System.String,System.Int64)">
            <summary>
            Returns day slot
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.ListDaySlotsByPlace(System.String)">
            <summary>
            List day slots by place id
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetHourSlot(System.String,System.Int64)">
            <summary>
            List day slot
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.ListHourSlotsByPlaceAndDaySlotId(System.String,System.Int64)">
            <summary>
            Lists hour slots by place and day
            </summary>
            <param name="placeId"></param>
            <param name="daySlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.Get5MinSlot(System.String,System.Int64)">
            <summary>
            Loads minute slot
            </summary>
            <param name="placeId"></param>
            <param name="minuteSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.ListMinuteSlotsByPlaceAndHourSlotId(System.String,System.Int64)">
            <summary>
            List all minute slots by hour and place
            </summary>
            <param name="placeId"></param>
            <param name="hourSlotId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetCurrentSlot(System.String,System.DateTimeOffset)">
            <summary>
            Get current slot
            </summary>
            <param name="place"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetSlotKeysD">
            <summary>
            GetSlotKeysD
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetSlotKeysH">
            <summary>
            GetSlotKeysH
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetSlotKeysM">
            <summary>
            GetSlotKeysM
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.FixAllSlots">
            <summary>
            fix stats in published slots
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.UserRepository">
            <summary>
            User repository manages users and stores user data securly in the database
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.UserRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.UserRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender,CovidMassTesting.Controllers.SMS.ISMSSender,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
            <param name="smsSender"></param>
            <param name="placeRepository"></param>
            <param name="placeProviderRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Add(CovidMassTesting.Model.User,System.String,System.String,System.Boolean)">
            <summary>
            Inserts new user
            </summary>
            <param name="user"></param>
            <param name="inviterName"></param>
            <param name="companyName"></param>
            <param name="allowUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GenerateRandomPassword(Microsoft.AspNetCore.Identity.PasswordOptions)">
            <summary>
            Generates a Random Password
            respecting the given strength requirements.
            </summary>
            <param name="opts">A valid PasswordOptions object
            containing the password strength requirements.</param>
            <returns>A random password</returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.SetUser(CovidMassTesting.Model.User,System.Boolean)">
            <summary>
            Set user. Encodes and stores to db.
            </summary>
            <param name="user"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.SetInvitation(CovidMassTesting.Model.Invitation,System.Boolean)">
            <summary>
            Set user. Encodes and stores to db.
            </summary>
            <param name="invitation"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Remove(System.String)">
            <summary>
            Removes user.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GetUser(System.String,System.String)">
            <summary>
            Decode encrypted user data
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GetInvitation(System.String)">
            <summary>
            GetInvitation
            </summary>
            <param name="invitationId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ListAll(System.String)">
            <summary>
            Lists all users 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ListInvitationsByPP(System.String)">
            <summary>
            Lists invitations by pp
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ListInvitationsByEmail(System.String)">
            <summary>
            Lists invitations by email
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.SetLocation(System.String,System.String,System.String)">
            <summary>
            Registration manager can set his place at which he performs tests
            </summary>
            <param name="email"></param>
            <param name="placeId"></param>
            <param name="placeProviderId">PP id for user token pp scope groups</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.CreateAdminUsersFromConfiguration">
            <summary>
            Create admin users from the configuration
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Preauthenticate(System.String)">
            <summary>
            Returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Authenticate(System.String,System.String)">
            <summary>
            Returns JWT token
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ChangePassword(System.String,System.String,System.String,System.String)">
            <summary>
            Change password
            
            If successful, returns new JWT token
            </summary>
            <param name="email">Email</param>
            <param name="oldHash">Old password</param>
            <param name="newHash">New password</param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ResetPassword(System.String,System.String)">
            <summary>
            ResetPassword
            </summary>
            <param name="email"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.SetPlaceProvider(System.String,System.String)">
            <summary>
            Change password
            
            If successful, returns new JWT token
            </summary>
            <param name="email">Email</param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.InAnyGroup(System.String,System.String[],System.String)">
            <summary>
            Checks if user with specified email has any of reqested groups
            </summary>
            <param name="email">User email</param>
            <param name="role">Search any of this roles</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GetPublicUser(System.String)">
            <summary>
            Returns public information about specific user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.DropDatabaseAuthorize(System.String,System.String)">
            <summary>
            Administrator is authorized to delete all data in the database
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Invite(CovidMassTesting.Model.Invitation)">
            <summary>
            invites person
            </summary>
            <param name="invitation"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ProcessInvitation(System.String,System.Boolean,System.String)">
            <summary>
            Accept/Deny the invitation. Stores accepted invitation to pp.
            </summary>
            <param name="invitationId"></param>
            <param name="accepted"></param>
            <param name="userEmail"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.DropAllData">
            <summary>
            Administrator has power to delete everything in the database. Password confirmation is required.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.VisitorRepository">
            <summary>
            Visitor repository holds data about visitors
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{CovidMassTesting.Repository.RedisRepository.VisitorRepository},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.VisitorRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender,CovidMassTesting.Controllers.SMS.ISMSSender,CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.ISlotRepository,CovidMassTesting.Repository.Interface.IPlaceProviderRepository,CovidMassTesting.Repository.Interface.IUserRepository,CovidMassTesting.Connectors.IMojeEZdravie)">
            <summary>
            Constructor
            </summary>
            <param name="localizer"></param>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
            <param name="smsSender"></param>
            <param name="placeRepository"></param>
            <param name="slotRepository"></param>
            <param name="placeProviderRepository"></param>
            <param name="userRepository"></param>
            <param name="eHealthConnector"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Add(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Creates new visitor registration
            </summary>
            <param name="visitor"></param>
            <param name="notify">Send notification</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Remove(System.Int32)">
            <summary>
            Remove visitor from redis
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.RemoveRegistration(System.String)">
            <summary>
            Remove registration
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetVisitor(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Decode visitor data from database
            </summary>
            <param name="codeInt"></param>
            <param name="fixOnLoad">Fixes the visitor object</param>
            <param name="silent">Do not log the event - mass processing logs the batch</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetRegistration(System.String)">
            <summary>
            Loads registrtion.  
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixVisitor(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Fills in missing data if possible
            </summary>
            <param name="visitor"></param>
            <param name="save">If true, it saves it</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.SetVisitor(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Encode visitor data and store to database
            </summary>
            <param name="visitor"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.SetRegistration(CovidMassTesting.Model.Registration,System.Boolean)">
            <summary>
            Add or update registration
            </summary>
            <param name="registration"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.MakeCompanyPeronalNumberHash(System.String,System.String)">
            <summary>
            Make hash from company personal number
            </summary>
            <param name="companyId"></param>
            <param name="employeeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.MapTestingSetToVisitorCode(System.Int32,System.String)">
            <summary>
            Maps testing code to visitor code
            </summary>
            <param name="codeInt"></param>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.MapHashedIdToRegistration(System.String,System.String)">
            <summary>
            Maps testing code to visitor code
            </summary>
            <param name="hashedId"></param>
            <param name="registrationId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UnMapTestingSet(System.String)">
            <summary>
            Removes testing code
            </summary>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UnMapHashedIdToRegistration(System.String)">
            <summary>
            UnMapHashedIdToRegistration
            </summary>
            <param name="hashedId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GETVisitorCodeFromTesting(System.String)">
            <summary>
            Returns visitor code from testing code
            </summary>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetRegistrationIdFromHashedId(System.String)">
            <summary>
            GetRegistrationIdFromHashedId
            </summary>
            <param name="hashedId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.MapPersonalNumberToVisitorCode(System.String,System.Int32)">
            <summary>
            Maps personal number to visitor code
            </summary>
            <param name="personalNumber"></param>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.MapDayToVisitorCode(System.Int64,System.Int32)">
            <summary>
            When 
             - visitor registers
             - visitor comes to the place at different day
            </summary>
            <param name="day"></param>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UnMapPersonalNumber(System.String)">
            <summary>
            Removes personal number
            </summary>
            <param name="personalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GETVisitorCodeFromPersonalNumber(System.String)">
            <summary>
            Returns visitor code from personal number
            </summary>
            <param name="personalNumber"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ConnectVisitorToTest(System.Int32,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Map visitor code to testing code
            </summary>
            <param name="codeInt"></param>
            <param name="testCodeClear"></param>
            <param name="adminWorker"></param>
            <param name="adminPlaceProviderId"></param>
            <param name="ipAddress"></param>
            <param name="silent"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UpdateTestingState(System.Int32,System.String,System.Boolean)">
            <summary>
            Updates testing state
            </summary>
            <param name="code"></param>
            <param name="state"></param>
            <param name="silent">Do not send sms/email</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UpdateTestWithoutNotification(System.Int32,System.String,System.Boolean)">
            <summary>
            Updates the visitor test result
            </summary>
            <param name="code"></param>
            <param name="state"></param>
            <param name="isAdmin"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.UpdateTestingStateFull(System.Int32,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates testing state
            </summary>
            <param name="code"></param>
            <param name="state"></param>
            <param name="testingSet"></param>
            <param name="updateStats"></param>
            <param name="adminWorker"></param>
            <param name="placeProviderId"></param>
            <param name="ipAddress"></param>
            <param name="silent"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetTest(System.Int32,System.String)">
            <summary>
            Returns test by code and password
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetPublicPDF(System.Int32,System.String)">
            <summary>
            Generate PDF file with test result
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetResultPDFByEmployee(System.Int32,System.String)">
            <summary>
            Generate PDF file with test result
            </summary>
            <param name="code"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.IncrementStats(System.String,System.String,System.String,System.DateTimeOffset)">
            <summary>
            Increment stats
            </summary>
            <param name="statsType">Model.StatsType.*</param>
            <param name="placeProviderId"></param>
            <param name="time"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.DropAllStats(System.Nullable{System.DateTimeOffset})">
            <summary>
            Drop all stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.DropAllRegistrations">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetPPStats(System.String,System.String)">
            <summary>
            Increment stats
            </summary>
            <param name="statsType">Model.StatsType.*</param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.NotifyWhenSick(CovidMassTesting.Model.Visitor)">
            <summary>
            Notifies personell about sick patients
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Enqueued(System.Int32,System.String)">
            <summary>
            When person comes to the queue he can mark him as in the queue
            
            It can help other people to check the queue time
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.RemoveTest(System.Int32,System.String)">
            <summary>
            Deletes the test
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.CreateNewVisitorId">
            <summary>
            Creates new unique visitor id
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllKeys(System.Nullable{System.DateTimeOffset})">
            <summary>
            Lists all keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllRegistrationKeys">
            <summary>
            Lists all keys for Registrations
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllResultKeys">
            <summary>
            Lists all result keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetVisitorByPersonalNumber(System.String,System.Boolean)">
            <summary>
            Returns visitor by personal number
            </summary>
            <param name="personalNumber"></param>
            <param name="nullOnMissing"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.SetTestResult(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Set test result
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <param name="isAdmin"></param>
            <param name="silent">Do not send email or sms</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.AddToDocQueue(System.String)">
            <summary>
            Add test to document queue
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.RemoveFromDocQueue(System.String)">
            <summary>
            Removes test from document queue
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ProcessSingle">
            <summary>
            Process pdf and sms sending after the test
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.RemoveFromDocQueueAndSetTestStateAsTaken(System.String,System.Boolean)">
            <summary>
            Removes document from queue and sets the test as taken
            </summary>
            <param name="testId"></param>
            <param name="isAdmin"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetFirstItemFromQueue">
            <summary>
            Seek first item from queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetNextTest">
            <summary>
            Fetch next test
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Register(CovidMassTesting.Model.Visitor,System.String,System.Boolean)">
            <summary>
            Public registration
            </summary>
            <param name="visitor"></param>
            <param name="managerEmail"></param>
            <param name="notify"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FormatPhone(System.String)">
            <summary>
            Format phone to slovak standard
            
            0800 123 456 convers to +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.IsPhoneNumber(System.String)">
            <summary>
            Validates the phone number +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.DropAllData">
            <summary>
            Deletes all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListSickVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List Sick Visitors. Data Exporter person at the end of testing can fetch all info and deliver them to medical office
            </summary>
            <param name="placePrividerId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListTestedVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32,System.Boolean)">
            <summary>
            List visitors who has passed the test
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId"></param>
            <param name="silent"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAnonymizedVisitors(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List visitors who has passed the test
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListExportableDays">
            <summary>
            ListExportableDays
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ProofOfWorkExport(System.Nullable{System.DateTimeOffset},System.Int32,System.Int32,System.String)">
            <summary>
            Export for institution that pays for the tests
            </summary>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId"></param>
            <param name="filterPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ExportRegistrations(System.Int32,System.Int32,System.String)">
            <summary>
            Export company registrations
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <param name="placeProviderId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListVisitorsInProcess(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List Sick Visitors. Data Exporter person at the end of testing can fetch all info and deliver them to medical office
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllVisitorsWhoDidNotCome(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List Sick Visitors. Data Exporter person at the end of testing can fetch all info and deliver them to medical office
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllVisitors(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            All visitors
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllVisitorsOrig(System.String,System.Nullable{System.DateTimeOffset},System.Int32,System.Int32)">
            <summary>
            List all visitors, return visitor object
            </summary>
            <param name="placeProviderId"></param>
            <param name="day"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.ListAllVisitorsAtPlace(System.String,System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Int32)">
            <summary>
            Visitors at place
            </summary>
            <param name="placeId"></param>
            <param name="fromRegTime"></param>
            <param name="untilRegTime"></param>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.TestStorage">
            <summary>
            Tests the storage
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.DownloadWalletDGC(System.Int32,System.String)">
            <summary>
            Generates the DGC PkPass file
            </summary>
            <param name="codeInt"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GenerateResultHTML(CovidMassTesting.Model.Visitor,System.String,System.String,CovidMassTesting.Model.Product,System.String,System.String)">
            <summary>
            Creates html source code for pdf generation
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <param name="resultguid"></param>
            <param name="oversight"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GenerateRegistrationHTML(CovidMassTesting.Model.Visitor,System.String,System.String,System.String,CovidMassTesting.Model.Product)">
            <summary>
            Creates html source code for pdf generation
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GenerateResultPDF(CovidMassTesting.Model.Visitor,System.String,System.String,CovidMassTesting.Model.Product,System.String,System.Boolean,System.String)">
            <summary>
            Creates pdf from test result
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <param name="resultguid"></param>
            <param name="sign"></param>
            <param name="oversight"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GenerateRegistrationPDF(CovidMassTesting.Model.Visitor,System.String,System.String,System.String,CovidMassTesting.Model.Product)">
            <summary>
            Creates pdf from registration
            </summary>
            <param name="visitor"></param>
            <param name="testingEntity"></param>
            <param name="placeName"></param>
            <param name="placeAddress"></param>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Sign(System.Byte[],System.Byte[],Org.BouncyCastle.X509.X509Certificate[],Org.BouncyCastle.Crypto.ICipherParameters,System.String,iText.Signatures.PdfSigner.CryptoStandard,System.String,System.String,System.Int32)">
            <summary>
            Digitaly sign pdf
            </summary>
            <param name="src"></param>
            <param name="pass"></param>
            <param name="chain"></param>
            <param name="pk"></param>
            <param name="digestAlgorithm"></param>
            <param name="subfilter"></param>
            <param name="reason"></param>
            <param name="location"></param>
            <param name="pages"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.GetResultVerification(System.String)">
            <summary>
            Decode visitor data from database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.SetResult(CovidMassTesting.Model.VerificationData,System.Boolean)">
            <summary>
            Encode visitor data and store to database
            </summary>
            <param name="verificationData"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Fix01">
            <summary>
            Fix. Set to visitor the test result and time of the test
            
            tries to match visitors by name with the test results list 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Fix02">
            <summary>
            Fix. Set to visitor the test result and time of the test
            
            tries to match visitors by name with the test results list 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixBirthYear">
            <summary>
            Fix. Set to visitor the test result and time of the test
            
            tries to match visitors by name with the test results list 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixStats">
            <summary>
            Fix. Set to visitor the test result and time of the test
            
            tries to match visitors by name with the test results list 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixVerificationData">
            <summary>
            Fix verification data
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixMapVisitorToDay">
            <summary>
            FixMapVisitorToDay
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FixPersonPlace(System.String,System.String,System.String)">
            <summary>
            Fix person place by day and user
            </summary>
            <param name="day"></param>
            <param name="newPlaceId"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Fix03">
            <summary>
            Fix. Set to visitor the test result and time of the test
            
            tries to match visitors by name with the test results list 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.DeleteOldVisitors(System.Int32)">
            <summary>
            Removes old tests from the system
            </summary>
            <param name="daysToKeep"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.IncreaseStatsAndCheckLimits(CovidMassTesting.Model.Place,CovidMassTesting.Model.Slot1Day,CovidMassTesting.Model.Slot1Hour,CovidMassTesting.Model.Slot5Min)">
            <summary>
            Increases the registrations, checks if limit has been reached, and if it is overlimit, decrements the registrations back
            </summary>
            <param name="place"></param>
            <param name="slotD"></param>
            <param name="slotH"></param>
            <param name="slotM"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Resources.Controllers_AdminController">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Invalid_user_or_password">
            <summary>
              Looks up a localized string similar to Invalid user or password.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Only_admin_is_allowed_to_drop_database">
            <summary>
              Looks up a localized string similar to Only admin is allowed to drop database.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Only_admin_is_allowed_to_invite_other_users">
            <summary>
              Looks up a localized string similar to Only admin is allowed to invite other users.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Only_admin_is_allowed_to_manage_time">
            <summary>
              Looks up a localized string similar to Only admin is allowed to manage time.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.Only_admin_is_allowed_to_remove_users">
            <summary>
              Looks up a localized string similar to Only admin is allowed to remove users.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.This_user_is_protected_by_the_configuration">
            <summary>
              Looks up a localized string similar to This user is protected by the configuration.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_AdminController.You_cannot_remove_yourself">
            <summary>
              Looks up a localized string similar to You cannot remove yourself.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Controllers_PlaceController">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_PlaceController.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_PlaceController.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_PlaceController.Old_place_not_found">
            <summary>
              Looks up a localized string similar to Old place not found.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_PlaceController.Only_admin_is_allowed_to_manage_testing_places">
            <summary>
              Looks up a localized string similar to Only admin is allowed to manage testing places.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_PlaceController.Place_not_found">
            <summary>
              Looks up a localized string similar to Place not found.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Controllers_ResultController">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Code_of_the_test_set_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Code of the test set must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Invalid_result_state">
            <summary>
              Looks up a localized string similar to Invalid result state.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Invalid_visitor_code">
            <summary>
              Looks up a localized string similar to Invalid visitor code.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Last_4_digits_of_personal_number_or_declared_passport_for_foreigner_at_registration_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Last 4 digits of personal number or declared passport for foreigner at registration must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Only_user_with_Data_Exporter_role_is_allowed_to_fetch_all_sick_visitors">
            <summary>
              Looks up a localized string similar to Only user with Data Exporter role is allowed to fetch all sick visitors.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Only_user_with_Document_Manager_role_is_allowed_to_fetch_visitor_data">
            <summary>
              Looks up a localized string similar to Only user with Document Manager role is allowed to fetch visitor data.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Only_user_with_Document_Manager_role_is_allowed_to_move_the_queue_forward">
            <summary>
              Looks up a localized string similar to Only user with Document Manager role is allowed to move the queue forward.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Only_user_with_Medic_Lab_role_is_allowed_to_set_results_of_tests">
            <summary>
              Looks up a localized string similar to Only user with Medic Lab role is allowed to set results of tests.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Only_user_with_Registration_Manager_role_or_Medic_Tester_role_is_allowed_to_fetch_data_of_visitors">
            <summary>
              Looks up a localized string similar to Only user with Registration Manager role or Medic Tester role is allowed to fetch data of visitors.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Personal_number_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Personal number must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Result_of_the_test_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Result of the test must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Test_code_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Test code must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Test_id_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Test id must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_ResultController.Visitor_code_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Visitor code must not be empty.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Controllers_UserController">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.Email_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Email must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.Only_user_with_Admin_role_can_list_users">
            <summary>
              Looks up a localized string similar to Only user with Admin role can list users.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.Only_user_with_Registration_Manager_role_can_select_his_own_place_">
            <summary>
              Looks up a localized string similar to Only user with Registration Manager role can select his own place..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.Place_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Place must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Controllers_UserController.This_special_user_cannot_change_the_password_">
            <summary>
              Looks up a localized string similar to This special user cannot change the password..
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.Error_adding_the_slot_for_day">
            <summary>
              Looks up a localized string similar to Error adding the slot for day.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.Error_creating_day_slot">
            <summary>
              Looks up a localized string similar to Error creating day slot.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.Error_creating_hour_slot">
            <summary>
              Looks up a localized string similar to Error creating hour slot.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_SlotRepository.Error_creating_minute_slot">
            <summary>
              Looks up a localized string similar to Error creating minute slot.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Dear__0___we_have_registered_you_into_mass_covid_testing_system__Please_check_your_email_">
            <summary>
              Looks up a localized string similar to Dear {0}, we have registered you into mass covid testing system. Please check your email..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Email_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Email must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Error_creating_record_in_the_database">
            <summary>
              Looks up a localized string similar to Error creating record in the database.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Hash_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Hash must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Invalid_old_password">
            <summary>
              Looks up a localized string similar to Invalid old password.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Invalid_place_provided">
            <summary>
              Looks up a localized string similar to Invalid place provided.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Invalid_user_or_password">
            <summary>
              Looks up a localized string similar to Invalid user or password.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Invalid_user_or_password_or_attempt_to_login_too_fast_after_failed_attempt">
            <summary>
              Looks up a localized string similar to Invalid user or password or attempt to login too fast after failed attempt.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.Invitation_to_covid_testing_place">
            <summary>
              Looks up a localized string similar to Invitation to covid testing place.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_UserRepository.User_not_found_by_email">
            <summary>
              Looks up a localized string similar to User not found by email.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Covid_test">
            <summary>
              Looks up a localized string similar to Covid test.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0____1__is_your_registration_code__Show_this_code_at_the_covid_sampling_place__3__on__2_">
            <summary>
              Looks up a localized string similar to Dear {1}, {0} is your registration code. Show this code at the covid sampling place {3} on {2}.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0___there_were_some_technical_issues_with_your_test__Please_visit_the_sampling_place_again_and_repeat_the_test_procedure__You_can_use_the_same_registration_as_before_">
            <summary>
              Looks up a localized string similar to Dear {0}, there were some technical issues with your test. Please visit the sampling place again and repeat the test procedure. You can use the same registration as before..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0___we_have_updated_your_registration__1___Time___2___Place___3_">
            <summary>
              Looks up a localized string similar to Dear {0}, we have updated your registration {1}. Time: {2}, Place: {3}.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0___your_test_is_in_processing__Please_wait_for_further_instructions_in_next_sms_message_">
            <summary>
              Looks up a localized string similar to Dear {0}, your test is in processing. Please wait for further instructions in next sms message..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0___your_test_result_has_been_processed__You_can_check_the_result_online__Please_come_to_take_the_certificate_">
            <summary>
              Looks up a localized string similar to {0}, {1}, AG test from {2} is {3}. Download PDF certificate from: {4}.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Dear__0__We_have_removed_your_personal_data_from_the_database__Thank_you_for_taking_the_covid_test">
            <summary>
              Looks up a localized string similar to Dear {0},We have removed your registration as well your personal data. Thank you.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Invalid_code">
            <summary>
              Looks up a localized string similar to Invalid code.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Last_4_digits_of_personal_number_or_declared_passport_for_foreigner_at_registration_must_not_be_empty">
            <summary>
              Looks up a localized string similar to Last 4 digits of personal number or declared passport for foreigner at registration must not be empty.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.NEGATIVE">
            <summary>
              Looks up a localized string similar to NEGATIVE.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Personal_data_may_be_deleted_only_after_the_test_has_proven_negative_result_and_person_receives_the_certificate_">
            <summary>
              Looks up a localized string similar to Personal data may be deleted only after the test has proven negative result and person receives the certificate..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.POSITIVE">
            <summary>
              Looks up a localized string similar to POSITIVE.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Positive_case">
            <summary>
              Looks up a localized string similar to Pozitívny nález.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Positive_case_found">
            <summary>
              Looks up a localized string similar to Positive case found: {0} {1} {2} {3}.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Test_does_not_exists">
            <summary>
              Looks up a localized string similar to Test does not exists.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.TestRegistration">
             <summary>
               Looks up a localized string similar to &lt;html&gt;
            &lt;head&gt;
                &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;
                &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;
                &lt;title&gt;Test registration&lt;/title&gt;
                &lt;style&gt;
                    h1 {
                        color: navy;
                        font-size: 2em;
                    }
            
                    th {
                        text-align: left;
                        vertical-align: top;
                    }
            
                    td {
                        vertical-align: top;
                    }
            
                    body {
                        font-family: sans- [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.TestResult">
             <summary>
               Looks up a localized string similar to &lt;html&gt;
            &lt;head&gt;
                &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;
                &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;
                &lt;title&gt;Test result&lt;/title&gt;
                &lt;style&gt;
                    h1 {
                        color: navy;
                        font-size: 2em;
                    }
            
                    th {
                        text-align: left;
                        vertical-align: top;
                    }
            
                    td {
                        vertical-align: top;
                    }
            
                    body {
                        font-family: sans-serif; [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.This_1_hour_time_slot_has_reached_the_capacity_">
            <summary>
              Looks up a localized string similar to This 1 hour time slot has reached the capacity ({0})..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.This_5_minute_time_slot_has_reached_the_capacity_">
            <summary>
              Looks up a localized string similar to This 5 minute time slot has reached the capacity ({0})..
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Unable_to_find_visitor_code_from_test_code__Are_you_sure_test_code_is_correct_">
            <summary>
              Looks up a localized string similar to Unable to find visitor code from test code. Are you sure test code is correct?.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Unknown_personal_number">
            <summary>
              Looks up a localized string similar to Unknown personal number.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.Visitor_with_code__0__not_found">
            <summary>
              Looks up a localized string similar to Visitor with code {0} not found.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.We_are_not_able_to_find_chosen_5_min__slot">
            <summary>
              Looks up a localized string similar to We are not able to find chosen 5 min. slot.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.We_are_not_able_to_find_chosen_hour_slot">
            <summary>
              Looks up a localized string similar to We are not able to find chosen hour slot.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.We_are_not_able_to_find_chosen_testing_place">
            <summary>
              Looks up a localized string similar to We are not able to find chosen testing place.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Resources.Repository_RedisRepository_VisitorRepository.You_can_remove_only_first_item_from_the_queue">
            <summary>
              Looks up a localized string similar to You can remove only first item from the queue.
            </summary>
        </member>
        <member name="T:CovidMassTesting.ScheduledTasks.DeleteOldVisitors">
            <summary>
            Export task
            </summary>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.DeleteOldVisitors.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.ScheduledTasks.ExportTask},Microsoft.Extensions.Configuration.IConfiguration,CovidMassTesting.Repository.Interface.IVisitorRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="visitorRepository"></param>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.DeleteOldVisitors.Process">
            <summary>
            Process
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.DeleteOldVisitors.Process(System.Int32)">
            <summary>
            Export data and send it to configured email
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.ScheduledTasks.ExportTask">
            <summary>
            Export task
            </summary>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.ExportTask.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.ScheduledTasks.ExportTask},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Options.IOptions{CovidMassTesting.Model.Settings.ExportTaskConfiguration},CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Controllers.Email.IEmailSender)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="configuration"></param>
            <param name="options"></param>
            <param name="visitorRepository"></param>
            <param name="emailSender"></param>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.ExportTask.Process">
            <summary>
            Process
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.ExportTask.Process(System.DateTimeOffset)">
            <summary>
            Export data and send it to configured email
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.ScheduledTasks.IScheduledTask">
            <summary>
            Scheduler tasks
            </summary>
        </member>
        <member name="M:CovidMassTesting.ScheduledTasks.IScheduledTask.Process">
            <summary>
            Process
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="F:CovidMassTesting.Startup.InstanceId">
            <summary>
            Identifies specific run of the application.
            </summary>
        </member>
        <member name="F:CovidMassTesting.Startup.Started">
            <summary>
            Identifies specific run of the application
            </summary>
        </member>
        <member name="F:CovidMassTesting.Startup.AppExitCancellationTokenSource">
            <summary>
            App exit catch event
            </summary>
        </member>
        <member name="P:CovidMassTesting.Startup.Args">
            <summary>
            Args for tasks processing
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:CovidMassTesting.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,CovidMassTesting.Repository.Interface.IUserRepository,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Startup},CovidMassTesting.Repository.Interface.IVisitorRepository,System.IServiceProvider,Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="userRepository"></param>
            <param name="logger"></param>
            <param name="visitorRepository"></param>
            <param name="serviceProvider"></param>
            <param name="lifeTime"></param>        
        </member>
    </members>
</doc>
