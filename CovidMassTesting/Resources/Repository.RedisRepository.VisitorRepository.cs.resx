<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Covid test" xml:space="preserve">
    <value>Testování Covidu</value>
  </data>
  <data name="Dear {0}, there were some technical issues with your test. Please visit the sampling place again and repeat the test procedure. You can use the same registration as before." xml:space="preserve">
    <value>{0}, Váš test nebylo možné vyhodnotit. Prosím dostavte se kdykoliv opětovně na test. Nemusíte se znovu registrovat.</value>
  </data>
  <data name="Dear {0}, we have updated your registration {1}. Time: {2}, Place: {3}" xml:space="preserve">
    <value>{0}, aktualizovali jsme Vaší registraci {1}. Čas: {2}, Místo: {3}</value>
  </data>
  <data name="Dear {0}, your test is in processing. Please wait for further instructions in next sms message." xml:space="preserve">
    <value>{0}, Váš test se zpracovává. Počkejte na další instrukce které dostanete v další SMS zprávě.</value>
  </data>
  <data name="Dear {0}, your test result has been processed. You can check the result online. Please come to take the certificate." xml:space="preserve">
    <value>{0}, {1}, {2} test ze dne {3} je {4}. PDF Certifikát získáte na: {5}</value>
  </data>
  <data name="Dear {0}, {1} is your registration code. Show this code at the covid sampling place {3} on {2}" xml:space="preserve">
    <value>{1}, {0} je Váš registračný kód. Předložte tento kód při odběru vzorků na místě {3} dňa {2}</value>
  </data>
  <data name="Dear {0},We have removed your personal data from the database. Thank you for taking the covid test" xml:space="preserve">
    <value>{0}, vymazali jsme Vaší registraci i Vaše osobní údaje ze systému.</value>
  </data>
  <data name="Invalid code" xml:space="preserve">
    <value>Neplatný kód</value>
  </data>
  <data name="Last 4 digits of personal number or declared passport for foreigner at registration must not be empty" xml:space="preserve">
    <value>Poslední 4 číslice rodného čísla nebo pro cizince poslední 4 znaky zadaného cestovného dokladu musí být zadané</value>
  </data>
  <data name="NEGATIVE" xml:space="preserve">
    <value>NEGATIVNÍ</value>
  </data>
  <data name="Personal data may be deleted only after the test has proven negative result and person receives the certificate." xml:space="preserve">
    <value>Osobní údaje mohou být vymazané jen pokud Vám nebyl detekovaný covid a převzali jste si certifikát.</value>
  </data>
  <data name="POSITIVE" xml:space="preserve">
    <value>POZITIVNÍ</value>
  </data>
  <data name="Positive case" xml:space="preserve">
    <value>Pozitívní nález</value>
  </data>
  <data name="Positive case found" xml:space="preserve">
    <value>Byla identifikovaná pozitivní osoba: {0} {1} {2} {3}</value>
  </data>
  <data name="Test does not exists" xml:space="preserve">
    <value>Test neexistuje</value>
  </data>
  <data name="This 1 hour time slot has reached the capacity." xml:space="preserve">
    <value>Tento hodinový časový úsek má už bohužel kapacitu zaplněnou ({0}).</value>
  </data>
  <data name="This 5 minute time slot has reached the capacity." xml:space="preserve">
    <value>Tento 5-minutový časový úsek má už bohužel kapacitu zaplněnou ({0}).</value>
  </data>
  <data name="Unable to find visitor code from test code. Are you sure test code is correct?" xml:space="preserve">
    <value>Nepodařilo sa najít návštěvníka podle testovací sady. Jste si jistý, že kód testu je správný?</value>
  </data>
  <data name="Unknown personal number" xml:space="preserve">
    <value>Neznámé rodné číslo</value>
  </data>
  <data name="Visitor with code {0} not found" xml:space="preserve">
    <value>Návštevník s kódem {0} nebyl nalezený</value>
  </data>
  <data name="We are not able to find chosen 5 min. slot" xml:space="preserve">
    <value>Nepodařilo se najít 5-minutový testovací úsek</value>
  </data>
  <data name="We are not able to find chosen hour slot" xml:space="preserve">
    <value>Nepodařilo se najít hodinový testovací úsek</value>
  </data>
  <data name="We are not able to find chosen testing place" xml:space="preserve">
    <value>Nepodařilo se najít místo testování</value>
  </data>
  <data name="You can remove only first item from the queue" xml:space="preserve">
    <value>Můžete vymazat pouze první položku z fronty</value>
  </data>
</root>